#include <stdio.h> int main ( ) { int i = 1 ; for ( i = 1 ; i < = 10 ; i + + ) { printf ( " % d " , i ) ; } return ( 0 ) ; }
#include <stdio.h> int main ( ) { int i = 1 ; while ( i < = 10 ) { printf ( " %d " , i ) ; i + + ; } return ( 0 ) ; }
#include <stdio.h> int main ( ) { int i = 1 ; do { printf ( " %d " , i ) ; i + + ; } while ( i < = 10 ) ; return ( 0 ) ; }
#include <stdio.h> void main ( ) { int i = 0 ; char ch ; for ( i = 0 ; i < 256 ; i + + ) { printf ( " %c " , ch ) ; ch = ch + 1 ; } }
#include <stdio.h> #include <conio.h> void main ( ) { unsigned int mask ; clrscr ( ) ; printf ( " Memory Required : %d butes " , sizeof ( mask ) ) ; getch ( ) ; }
#include <stdio.h> main ( ) { float a = 14.0 ; float b = 5.0 ; printf ( " %f % % %f = %fn " , a , b , a % b ) ; }
#include <graphics.h> #include <conio.h> void main ( ) { int gd = DETECT , gm ; initgraph ( & gd , & gm , " c : \\tc\\bgi " ) ; circle ( 300 , 300 , 50 ) ; getch ( ) ; closegraph ( ) ; }
#include <stdio.h> int main ( ) { int far * ptr ; printf ( " Size of Integer Far Pointer : %d " , sizeof ( ptr ) ) ; return ( 0 ) ; }
#include <stdio.h> int main ( ) { float a = 3.14 , * fptr ; fptr = & a ; printf ( " Size of Float Pointer : %d " , sizeof ( fptr ) ) ; return ( 0 ) ; }
#include <stdio.h> int main ( ) { char a = 'a' , * cptr ; cptr = & a ; printf ( " \n Size of Char Pointer : %d " , sizeof ( cptr ) ) ; return ( 0 ) ; }
#include <stdio.h> int main ( ) { int a = 10 , * ptr ; ptr = & a ; printf ( " Size of int pointer : %d " , sizeof ( ptr ) ) ; return ( 0 ) ; }
#include <stdio.h> void main ( ) { int a = 3 , b = 3 , c ; asm { mov ax , a mov bx , a add ax , bx mov c , ax } printf ( " %d " , c ) ; }
#include <stdio.h> void main ( ) { if ( printf ( " Hello " ) ) { } }
#include <stdio.h> void main ( ) { while ( printf ( " Hello " ) ) { } }
#include <stdio.h> void main ( ) { switch ( printf ( " Hello " ) ) { } }
#include <stdio.h> void main ( ) { if ( printf ( " " ) ) { } else if ( printf ( " Hello " ) ) { } else { } }
#include <stdio.h> void main ( ) { while ( !printf ( " Hello " ) ) { } }
#include <stdio.h> #define PRINT printf ( " Hello " ) void main ( ) { if ( PRINT ) { } }
#include <stdio.h> #include <conio.h> void main ( ) { clrscr ( ) ; printf ( " %d " , printf ( " abcdefghijklmnopqrstuvwxyz " ) ) ; getch ( ) ; }
#include <stdio.h> int main ( ) { int num = 1342 ; printf ( " %d " , printf ( " %d " , printf ( " %d " , num ) ) ) ; return ( 0 ) ; }
#include <stdio.h> int main ( ) { int num1 = 10 , num2 = 5 , i ; while ( num2 > 0 ) { num1 + + ; num2-- ; } printf ( " %d " , num1 ) ; return ( 0 ) ; }
#include <stdio.h> int main ( ) { int num1 = 10 , num2 = 5 , i ; while ( num2-- ) { num1 + + ; } printf ( " Sum is : %d " , num1 ) ; return ( 0 ) ; }
#include <stdio.h> int main ( ) { int num1 = 10 , num2 = 5 ; num1 = num1 - ( -num2 ) ; printf ( " Sum is : %d " , num1 ) ; return ( 0 ) ; }
#include <stdio.h> #include " myhead.h " void main ( ) { int num1 = 10 , num2 = 10 , num3 ; num3 = add ( num1 , num2 ) ; printf ( " Addition of Two numbers : %d " , num3 ) ; }
#include <stdio.h> #define begin main int begin ( ) { printf ( " Hello " ) ; return ( 0 ) ; }
#include <stdio.h> #define begin m##a##i##n void begin ( ) { printf ( " Hello " ) ; }
#include <stdio.h> #define begin ( m , a , i , n ) m##a##i##n #define start begin ( m , a , i , n ) void start ( ) { printf ( " Hello " ) ; }
#include <dos.h> void main ( ) { char * path = " BIN " ; _AH = 0x39 ; _DX = ( unsigned int ) path ; __int__ ( 0x21 ) ; }
#include <dos.h> void main ( ) { char * message = " Pritesh Taral$ " ; _AH = 9 ; _DX = ( int ) message ; geninterrupt ( 0x21 ) ; }
#include <stdio.h> void main ( ) { int i = 0 ; Start : i = i + 1 ; printf ( " %d " , i ) ; if ( i < = 10 ) goto Start ; }
#include <stdio.h> void main ( ) { static int i = 1 ; if ( i < = 10 ) { printf ( " %d " , i + + ) ; main ( ) ; } }
#include <stdio.h> main ( ) { printf ( " hello , world " ) ; }
#include <stdio.h> main ( ) { printf ( " hello , world " ) }
#include <stdio.h> main ( ) { printf ( " hello , world\n  " ) ; }
#include <stdio.h> main ( ) { printf ( " hello , world " ) ; }
#include <stdio.h> main ( ) { printf ( " hello , world " ) }
#include <stdio.h> main ( ) { printf ( " hello , world\n  " ) ; }
#include <iostream.h> int main ( ) { cout < < " Hello , Welcome to C + + " ; return ( 0 ) ; }
#include <iostream.h> int main ( ) { cout < < " Hello , Welcome to C + + " ; return ( 0 ) ; }
#include <stdio.h> void message ( ) ; void main ( ) { message ( ) ; } void message ( ) { printf ( " Hi , How are you ? " ) ; }
#include <stdio.h> void message ( ) ; void main ( ) { message ( ) ; } void message ( ) { printf ( " Hi , How are you ? " ) ; }
#include <stdio.h> int main ( ) { int i = 1 ; for ( i = 1 ; i < = 10 ; i + + ) { printf ( " %d " , i ) ; } return ( 0 ) ; }
#include <stdio.h> int main ( ) { int i = 1 ; while ( i < = 10 ) { printf ( " %d " , i ) ; i + + ; } return ( 0 ) ; }
#include <stdio.h> int main ( ) { int i = 1 ; do { printf ( " %d " , i ) ; i + + ; } while ( i < = 10 ) ; return ( 0 ) ; }
#include <stdio.h> void main ( ) { int i = 0 ; char ch ; for ( i = 0 ; i < 256 ; i + + ) { printf ( " %c " , ch ) ; ch = ch + 1 ; } }
#include <stdio.h> int main ( ) { int far * ptr ; printf ( " Size of Integer Far Pointer : %d " , sizeof ( ptr ) ) ; return ( 0 ) ; }
#include <stdio.h> int main ( ) { float a = 3.14 , * fptr ; fptr = & a ; printf ( " Size of Float Pointer : %d " , sizeof ( fptr ) ) ; return ( 0 ) ; }
#include <stdio.h> int main ( ) { char a = 'a' , * cptr ; cptr = & a ; printf ( " \n Size of Char Pointer : %d " , sizeof ( cptr ) ) ; return ( 0 ) ; }
#include <stdio.h> int main ( ) { int a = 10 , * ptr ; ptr = & a ; printf ( " Size of int pointer : %d " , sizeof ( ptr ) ) ; return ( 0 ) ; }
#include <stdio.h> #include <conio.h> void main ( ) { unsigned int mask ; clrscr ( ) ; printf ( " Memory Required : %d butes " , sizeof ( mask ) ) ; getch ( ) ; }
#include <graphics.h> #include <conio.h> void main ( ) { int gd = DETECT , gm ; initgraph ( & gd , & gm , " c : \\tc\\bgi " ) ; circle ( 300 , 300 , 50 ) ; getch ( ) ; closegraph ( ) ; }
#include <stdio.h> main ( ) { float a = 14.0 ; float b = 5.0 ; printf ( " %f % % %f = %fn " , a , b , a % b ) ; }
#include <stdio.h> void main ( ) { int a = 3 , b = 3 , c ; asm { mov ax , a mov bx , a add ax , bx mov c , ax } printf ( " %d " , c ) ; }
#include <stdio.h> void main ( ) { if ( printf ( " Hello " ) ) { } }
#include <stdio.h> void main ( ) { while ( printf ( " Hello " ) ) { } }
#include <stdio.h> void main ( ) { switch ( printf ( " Hello " ) ) { } }
#include <stdio.h> void main ( ) { if ( printf ( " " ) ) { } else if ( printf ( " Hello " ) ) { } else { } }
#include <stdio.h> void main ( ) { while ( !printf ( " Hello " ) ) { } }
#include <stdio.h> #define PRINT printf ( " Hello " ) void main ( ) { if ( PRINT ) { } }
#include <stdio.h> #include <conio.h> void main ( ) { clrscr ( ) ; printf ( " %d " , printf ( " abcdefghijklmnopqrstuvwxyz " ) ) ; getch ( ) ; }
#include <stdio.h> int main ( ) { int num = 1342 ; printf ( " %d " , printf ( " %d " , printf ( " %d " , num ) ) ) ; return ( 0 ) ; }
#include <stdio.h> int main ( ) { int num1 = 10 , num2 = 5 , i ; while ( num2 > 0 ) { num1 + + ; num2-- ; } printf ( " %d " , num1 ) ; return ( 0 ) ; }
#include <stdio.h> int main ( ) { int num1 = 10 , num2 = 5 , i ; while ( num2-- ) { num1 + + ; } printf ( " Sum is : %d " , num1 ) ; return ( 0 ) ; }
#include <stdio.h> int main ( ) { int num1 = 10 , num2 = 5 ; num1 = num1 - ( -num2 ) ; printf ( " Sum is : %d " , num1 ) ; return ( 0 ) ; }
#include <stdio.h> #include " myhead.h " void main ( ) { int num1 = 10 , num2 = 10 , num3 ; num3 = add ( num1 , num2 ) ; printf ( " Addition of Two numbers : %d " , num3 ) ; }
#include <stdio.h> #define begin main int begin ( ) { printf ( " Hello " ) ; return ( 0 ) ; }
#include <stdio.h> #define begin m##a##i##n void begin ( ) { printf ( " Hello " ) ; }
#include <stdio.h> #define begin ( m , a , i , n ) m##a##i##n #define start begin ( m , a , i , n ) void start ( ) { printf ( " Hello " ) ; }
#include <dos.h> void main ( ) { char * path = " BIN " ; _AH = 0x39 ; _DX = ( unsigned int ) path ; __int__ ( 0x21 ) ; }
#include <dos.h> void main ( ) { char * message = " Pritesh Taral$ " ; _AH = 9 ; _DX = ( int ) message ; geninterrupt ( 0x21 ) ; }
#include <stdio.h> void main ( ) { int i = 0 ; Start : i = i + 1 ; printf ( " %d " , i ) ; if ( i < = 10 ) goto Start ; }
#include <stdio.h> void main ( ) { static int i = 1 ; if ( i < = 10 ) { printf ( " %d " , i + + ) ; main ( ) ; } }
#include <stdio.h> int main ( ) { printf ( " Hello World " ) ; return 0 ; }
#include void hello ( ) { printf ( " Hello World " ) ; } int main ( ) { hello ( ) ; return 0 ; }
#include <stdio.h> void introduction ( ) { printf ( " Hi\n  " ) ; printf ( " My name is Chaitanya\n  " ) ; printf ( " How are you? " ) ; } int main ( ) { introduction ( ) ; return 0 ; }
#include <stdio.h> int main ( ) { int num ; printf ( " Enter an integer : " ) ; scanf ( " %d " , & num ) ; printf ( " The number entered by user is : %d " , num ) ; return 0 ; }
#include <stdio.h> int main ( ) { int x = 20 ; int y = 22 ; if ( x <y ) { printf ( " Variable x is less than y " ) ; } return 0 ; }
#include <stdio.h> int main ( ) { int i ; for ( i = 1 ; i < = 3 ; i + + ) { printf ( " %d\n  " , i ) ; } return 0 ; }
#include <stdio.h> int main ( ) { int count = 1 ; while ( count < = 4 ) { printf ( " %d " , count ) ; count + + ; } return 0 ; }
#include <stdio.h> int main ( ) { int var = 1 ; while ( var < = 2 ) { printf ( " %d " , var ) ; } }
#include <stdio.h> int main ( ) { int var = 6 ; while ( var > = 5 ) { printf ( " %d " , var ) ; var + + ; } return 0 ; }
#include <stdio.h> int main ( ) { int var = 5 ; while ( var < = 10 ) { printf ( " %d " , var ) ; var-- ; } return 0 ; }
#include <stdio.h> #include <string.h> int main ( ) { char nickname [ 20 ] ; printf ( " Enter your Nick name : " ) ; scanf ( " %s " , nickname ) ; printf ( " %s " , nickname ) ; return 0 ; }
#include <stdio.h> #include <string.h> int main ( ) { char nickname [ 20 ] ; puts ( " Enter your Nick name : " ) ; gets ( nickname ) ; puts ( nickname ) ; return 0 ; }
#include <stdio.h> #include <string.h> int main ( ) { char str1 [ 20 ] = " BeginnersBook " ; printf ( " Length of string str1 : %d " , strlen ( str1 ) ) ; return 0 ; }
#include <stdio.h> #include <string.h> int main ( ) { char mystr [ 30 ] = " I’m an example of function strchr " ; printf ( " %s " , strchr ( mystr , 'f' ) ) ; return 0 ; }
#include <stdio.h> #include <string.h> int main ( ) { char mystr [ 30 ] = " I’m an example of function strchr " ; printf ( " %s " , strrchr ( mystr , 'f' ) ) ; return 0 ; }
#include <stdio.h> #include <string.h> int main ( ) { char inputstr [ 70 ] = " String Function in C at BeginnersBook.COM " ; printf ( " Output string is : %s " , strstr ( inputstr , 'Begi' ) ) ; return 0 ; }
#include <stdio.h> int main ( ) { int j = 0 ; do { printf ( " Value of variable j is : %d\n  " , j ) ; j + + ; } while ( j < = 3 ) ; return 0 ; }
#include <stdio.h> int main ( ) { int i = 0 ; while ( i = = 1 ) { printf ( " while vs do-while " ) ; } printf ( " Out of loop " ) ; }
#include <stdio.h> int main ( ) { int i = 0 ; do { printf ( " while vs do-while\n  " ) ; } while ( i = = 1 ) ; printf ( " Out of loop " ) ; }
#include <stdio.h> int main ( ) { for ( int j = 0 ; j < = 8 ; j + + ) { if ( j = = 4 ) { continue ; } printf ( " %d " , j ) ; } return 0 ; }
#include <stdio.h> int main ( ) { int counter = 10 ; while ( counter > = 0 ) { if ( counter = = 7 ) { counter-- ; continue ; } printf ( " %d " , counter ) ; counter-- ; } return 0 ; }
#include <stdio.h> int main ( ) { int num = 10 ; printf ( " Value of variable num is : %d " , num ) ; printf ( " \n Address of variable num is : %p " , & num ) ; return 0 ; }
#include <stdio.h> int main ( ) { int num = 10 ; int * p ; p = # printf ( " Address of variable num is : %p " , p ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Catch me if you can. " ) ; } < / stdio.h>
#include <stdio.h> #include <stdbool.h> int main ( ) { bool a = true ; return 0 ; }
#include <stdio.h> #include <complex.h> int main ( ) { int complex z = 2 + 1 * I ; }
#include <stdio.h> int main ( ) { printf ( " C Programming " ) ; return 0 ; }
#include <stdio.h> int main ( ) { int testInteger = 5 ; printf ( " Number = %d " , testInteger ) ; return 0 ; }
#include <stdio.h> int main ( ) { int testInteger ; printf ( " Enter an integer : " ) ; scanf ( " %d " , & testInteger ) ; printf ( " Number = %d " , testInteger ) ; return 0 ; }
#include <stdio.h> int main ( ) { float f ; printf ( " Enter a number : " ) ; scanf ( " %f " , & f ) ; printf ( " Value = %f " , f ) ; return 0 ; }
#include <stdio.h> int main ( ) { char chr ; printf ( " Enter a character : " ) ; scanf ( " %c " , & chr ) ; printf ( " You entered %c. " , chr ) ; return 0 ; }
#include <stdio.h> int main ( ) { int chr = 69 ; printf ( " Character having ASCII value 69 is %c. " , chr ) ; return 0 ; }
#include <stdio.h> void display ( ) ; int n = 5 ; int main ( ) { + + n ; display ( ) ; return 0 ; } void display ( ) { + + n ; printf ( " n = %d " , n ) ; }
#include <stdio.h> void display ( ) ; int main ( ) { display ( ) ; display ( ) ; } void display ( ) { static int c = 0 ; printf ( " %d " , c ) ; c + = 5 ; }
#include <stdio.h> void display ( int age ) { printf ( " %d " , age ) ; } int main ( ) { int ageArray [ ] = { 2 , 3 , 4 } ; display ( ageArray [ 2 ] ) ; return 0 ; }
#include <stdio.h> int main ( ) { char name [ 20 ] ; printf ( " Enter name : " ) ; scanf ( " %s " , name ) ; printf ( " Your name is %s. " , name ) ; return 0 ; }
#include <stdio.h> int main ( ) { char name [ 30 ] ; printf ( " Enter name : " ) ; gets ( name ) ; printf ( " Name : " ) ; puts ( name ) ; return 0 ; }
#include <stdio.h> int main ( ) { char name [ 30 ] ; printf ( " Enter name : " ) ; gets ( name ) ; printf ( " Name : " ) ; puts ( name ) ; return 0 ; }
#include <stdio.h> int main ( ) { int var = 5 ; printf ( " Value : %d\n  " , var ) ; printf ( " Address : %u " , & var ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Hello , World! " ) ; return 0 ; }
#include <stdio.h> int main ( ) { int number ; printf ( " Enter an integer : " ) ; scanf ( " %d " , & number ) ; printf ( " You entered : %d " , number ) ; return 0 ; }
#include <stdio.h> int main ( ) { char c ; printf ( " Enter a character : " ) ; scanf ( " %c " , & c ) ; printf ( " ASCII value of %c = %d " , c , c ) ; return 0 ; }
#include <stdio.h> #include <stdbool.h> int main ( ) { bool a = true ; return 0 ; }
#include <stdio.h> #include <complex.h> int main ( ) { int complex z = 2 + 1 * I ; }
#include <stdio.h> int main ( ) { printf ( " C Programming " ) ; return 0 ; }
#include <stdio.h> int main ( ) { int testInteger = 5 ; printf ( " Number = %d " , testInteger ) ; return 0 ; }
#include <stdio.h> int main ( ) { int testInteger ; printf ( " Enter an integer : " ) ; scanf ( " %d " , & testInteger ) ; printf ( " Number = %d " , testInteger ) ; return 0 ; }
#include <stdio.h> int main ( ) { float f ; printf ( " Enter a number : " ) ; scanf ( " %f " , & f ) ; printf ( " Value = %f " , f ) ; return 0 ; }
#include <stdio.h> int main ( ) { char chr ; printf ( " Enter a character : " ) ; scanf ( " %c " , & chr ) ; printf ( " You entered %c. " , chr ) ; return 0 ; }
#include <stdio.h> int main ( ) { int chr = 69 ; printf ( " Character having ASCII value 69 is %c. " , chr ) ; return 0 ; }
#include <stdio.h> void display ( ) ; int n = 5 ; int main ( ) { + + n ; display ( ) ; return 0 ; } void display ( ) { + + n ; printf ( " n = %d " , n ) ; }
#include <stdio.h> void display ( ) ; int main ( ) { display ( ) ; display ( ) ; } void display ( ) { static int c = 0 ; printf ( " %d " , c ) ; c + = 5 ; }
#include <stdio.h> void display ( int age ) { printf ( " %d " , age ) ; } int main ( ) { int ageArray [ ] = { 2 , 3 , 4 } ; display ( ageArray [ 2 ] ) ; return 0 ; }
#include <stdio.h> int main ( ) { int var = 5 ; printf ( " Value : %d\n  " , var ) ; printf ( " Address : %u " , & var ) ; return 0 ; }
#include <stdio.h> int main ( ) { char name [ 20 ] ; printf ( " Enter name : " ) ; scanf ( " %s " , name ) ; printf ( " Your name is %s. " , name ) ; return 0 ; }
#include <stdio.h> int main ( ) { char name [ 30 ] ; printf ( " Enter name : " ) ; gets ( name ) ; printf ( " Name : " ) ; puts ( name ) ; return 0 ; }
#include <stdio.h> int main ( ) { char name [ 30 ] ; printf ( " Enter name : " ) ; gets ( name ) ; printf ( " Name : " ) ; puts ( name ) ; return 0 ; }
#include <stdio.h> enum week { sunday , monday , tuesday , wednesday , thursday , friday , saturday } ; int main ( ) { enum week today ; today = wednesday ; printf ( " Day %d " , today + 1 ) ; return 0 ; }
#include <stdio.h> enum designFlags { BOLD = 1 , ITALICS = 2 , UNDERLINE = 4 } ; int main ( ) { int myDesign = BOLD | UNDERLINE ; printf ( " %d " , myDesign ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Current time : %s " , __TIME__ ) ; }
#include <stdio.h> int main ( ) { printf ( " Catch me if you can. " ) ; } < / stdio.h>
#include <stdio.h> enum week { sunday , monday , tuesday , wednesday , thursday , friday , saturday } ; int main ( ) { enum week today ; today = wednesday ; printf ( " Day %d " , today + 1 ) ; return 0 ; }
#include <stdio.h> enum designFlags { BOLD = 1 , ITALICS = 2 , UNDERLINE = 4 } ; int main ( ) { int myDesign = BOLD | UNDERLINE ; printf ( " %d " , myDesign ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Current time : %s " , __TIME__ ) ; }
#include <stdio.h> int main ( ) { int a = 12 , b = 25 ; printf ( " Output = %d " , a & b ) ; return 0 ; }
#include <stdio.h> int main ( ) { int a = 12 , b = 25 ; printf ( " Output = %d " , a|b ) ; return 0 ; }
#include <stdio.h> int main ( ) { int a = 12 , b = 25 ; printf ( " Output = %d " , a^b ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Output = %d\n  " , ~35 ) ; printf ( " Output = %d\n  " , ~-12 ) ; return 0 ; }
#include <stdio.h> #include <string.h> int main ( ) { char str1 [ ] = " This is " , str2 [ ] = " programiz.com " ; strcat ( str1 , str2 ) ; puts ( str1 ) ; puts ( str2 ) ; return 0 ; }
#include <stdio.h> #include <string.h> int main ( ) { char str1 [ ] = " This is " , str2 [ ] = " programiz.com " ; strcat ( str1 , str2 ) ; puts ( str1 ) ; puts ( str2 ) ; return 0 ; }
#include <stdio.h> int main ( ) { char c ; for ( c = 'A' ; c < = 'Z' ; + + c ) printf ( " %c " , c ) ; return 0 ; }
#include <stdio.h> int main ( ) { int a = 12 , b = 25 ; printf ( " Output = %d " , a & b ) ; return 0 ; }
#include <stdio.h> int main ( ) { int a = 12 , b = 25 ; printf ( " Output = %d " , a|b ) ; return 0 ; }
#include <stdio.h> int main ( ) { int a = 12 , b = 25 ; printf ( " Output = %d " , a^b ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Output = %d\n  " , ~35 ) ; printf ( " Output = %d\n  " , ~-12 ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Current time : %s " , __TIME__ ) ; }
#include <stdio.h> #include <math.h> int main ( ) { double num = 6 , squareRoot ; squareRoot = sqrt ( num ) ; printf ( " Square root of %lf = %lf " , num , squareRoot ) ; return 0 ; }
#include <ctype.h> #include <stdio.h> int main ( ) { int c ; for ( c = 1 ; c < = 127 ; + + c ) if ( isprint ( c ) ! = 0 ) printf ( " %c " , c ) ; return 0 ; }
#include <stdio.h> #include <math.h> int main ( ) { double num = 6 , cubeRoot ; cubeRoot = cbrt ( num ) ; printf ( " Cube root of %lf = %lf " , num , cubeRoot ) ; return 0 ; }
#include <stdio.h> #include <math.h> int main ( ) { double num = 8.33 ; int result ; result = ceil ( num ) ; printf ( " Ceiling integer of %.2f = %d " , num , result ) ; return 0 ; }
#include <stdio.h> #include <math.h> int main ( ) { double x = 12.0 , result ; result = exp ( x ) ; printf ( " Exponential of %.2lf = %.2lf " , x , result ) ; return 0 ; }
#include <stdio.h> #include <math.h> int main ( ) { double num = -8.33 ; int result ; result = floor ( num ) ; printf ( " Floor integer of %.2f = %d " , num , result ) ; return 0 ; }
#include <stdio.h> #include <math.h> int main ( ) { double num = 5.6 , result ; result = log ( num ) ; printf ( " log ( %.1f ) = %.2f " , num , result ) ; return 0 ; }
#include <stdio.h> #include <math.h> int main ( ) { double num = 4.00 , result ; result = log10 ( num ) ; printf ( " log10 ( %.1f ) = %.2f " , num , result ) ; return 0 ; }
#include <stdio.h> #include <math.h> #define PI 3.141592654 int main ( ) { double angle = 2.50 , result ; result = sinh ( angle ) ; printf ( " Sine hyperbolic of %.2lf ( in radians ) = %.2lf " , angle , result ) ; return 0 ; }
#include <stdio.h> #include <math.h> #define PI 3.141592654 int main ( ) { double angle = 0.40 , result ; result = tanh ( angle ) ; printf ( " Tangent hyperbolic of %.2lf ( in radians ) = %.2lf " , angle , result ) ; return 0 ; }
#include <stdio.h> #include <conio.h> void main ( ) { clrscr ( ) ; printf ( " Hello Compiler , I am C " ) ; getch ( ) ; }
#include <stdio.h> #include <conio.h> void main ( ) { clrscr ( ) ; printf ( " Hello World " ) ; getch ( ) ; }
#include <stdio.h> #include <conio.h> void main ( ) { clrscr ( ) ; int num = 10 ; printf ( " The value of num is %d " , num ) ; getch ( ) ; }
#include <stdio.h> #include <conio.h> #include <stdlib.h> void main ( ) { clrscr ( ) ; int i ; for ( i = 0 ; i <100 ; i + + ) { printf ( " %d\t " , rand ( ) ) ; } getch ( ) ; }
#include <conio.h> #include <stdlib.h> void main ( ) { clrscr ( ) ; system ( " C : \\Windows\\System32\\ipconfig " ) ; getch ( ) ; }
#include <stdio.h> #include <stdlib.h> int main ( ) { system ( " C : \\Windows\\System32\\shutdown / s " ) ; return 0 ; }
#include <stdio.h> #include <conio.h> int main ( ) { system ( " C : \\Windows\\System32\\shutdown / s / t 0 " ) ; return 0 ; }
#include <stdio.h> int main ( ) { system ( " shutdown -P now " ) ; return 0 ; }
#include <stdio.h> void main ( ) { int num , sum = 0 ; for ( num = 1 ; num < = 50 ; num + + ) { sum = sum + num ; } printf ( " Sum = %4d\n  " , sum ) ; }
#include <stdio.h> int main ( ) { system ( " shutdown -P now " ) ; return 0 ; }
#include <stdio.h> #define decode ( s , t , u , m , p , e , d ) m##s##u##t#define begin decode ( a , n , i , m , a , t , e ) int begin ( ) { printf ( " helloworld " ) ; }
#include <stdio.h> void main ( ) { if ( printf ( " Hi.. Welcome to sanfoundry " ) ) { } }
#include <stdio.h> struct temp { int a [ 10 ] ; char p ; } ;
#include <stdio.h> main ( ) { int a = 1 ; printf ( " size of a is %d , " , sizeof ( + + a ) ) ; printf ( " value of a is %d " , a ) ; } ;
#include <stdio.h> printf ( " %d " , sizeof ( strlen ( " HELLOWORLD " ) ) ) ;
#include <stdio.h> ( sizeof double = 8 , float = 4 , void = 1 ) #define PI 3.14 int main ( ) { printf ( " %d " , sizeof ( PI ) ) ; }
#include <stdio.h> int main ( ) { FILE * fileptr1 , * fileptr2 ; char filename [ 40 ] ; char ch ; int delete_line , temp = 1 ; printf ( " Enter file name : " ) ; scanf ( " %s " , filename ) ;
#include <stdio.h> #include <stdlib.h> struct node { int data ; struct node * next ; } ; void print_reverse_recursive ( struct node * ) ; void print ( struct node * ) ; void create_new_node ( struct node * , int ) ;
#include <stdio.h> void main ( ) { int array [ 30 ] , temp [ 30 ] , i , j , k , l , num ;
#include <stdio.h> #include <stdlib.h> #include <string.h> int top = -1 ; char stack [ 100 ] ;
#include <stdio.h> #include <stdlib.h> #define MAX 10 struct node { int data ; struct node * link ; } * front , * rear ;
#include <stdio.h> #include <stdlib.h> struct node { int data ; struct node * link ; } * top = NULL ; #define MAX 5
#include <stdio.h> #include <stdlib.h> struct btnode { int value ; struct btnode * l ; struct btnode * r ; } * root = NULL , * ptr , * temp ;
#include <stdio.h> #include <stdlib.h> struct btnode { int value ; struct btnode * l ; struct btnode * r ; } * root = NULL ;
#include <stdio.h> #include <limits.h> int MatrixChainOrder ( int p [ ] , int n ) { int m [ n ] [ n ] ; int s [ n ] [ n ] ; int i , j , k , L , q ;
#include <stdio.h> #include <string.h> #include <stdlib.h> int gcd ( int x , int y ) { int r = 0 , a , b ; a = ( x > y ) ? x : y ;
#include <stdio.h> int max ( int a , int b ) { return ( a > b ) ? a : b ; }
#include <stdio.h> int main ( ) { printf ( " Hello World! %d \n  " , x ) ; return 0 ; }
#include <stdio.h> int main ( ) { int y = 10000 ; int y = 34 ; printf ( " Hello World! %d\n  " , y ) ; return 0 ; }
#include <stdio.h> int main ( ) { int main = 3 ; printf ( " %d " , main ) ; return 0 ; }
#include <stdio.h> int main ( ) { int ThisIsVariableName = 12 ; int ThisIsVariablename = 14 ; printf ( " %d " , ThisIsVariablename ) ; return 0 ; }
#include <stdio.h> int main ( ) { signed char chr ; chr = 128 ; printf ( " %d\n  " , chr ) ; return 0 ; }
#include <stdio.h> int main ( ) { float f1 = 0.1 ; if ( f1 = = 0.1 ) printf ( " equal\n  " ) ; else printf ( " not equal\n  " ) ; }
#include <stdio.h> int main ( ) { float f1 = 0.1 ; if ( f1 = = 0.1f ) printf ( " equal\n  " ) ; else printf ( " not equal\n  " ) ; }
#include <stdio.h> union Sti { int nu ; char m ; } ; int main ( ) { union Sti s ; printf ( " %d " , sizeof ( s ) ) ; return 0 ; }
#include <stdio.h> int main ( ) { float x = 'a' ; printf ( " %f " , x ) ; return 0 ; }
#include <stdio.h> int main ( ) { enum { ORANGE = 5 , MANGO , BANANA = 4 , PEACH } ; printf ( " PEACH = %d\n  " , PEACH ) ; }
#include <stdio.h> int main ( ) { printf ( " C programming %s " , " Class by\n  %s Sanfoundry " , " WOW " ) ; }
#include <stdio.h> #define a 10 int main ( ) { const int a = 5 ; printf ( " a = %d\n  " , a ) ; }
#include <stdio.h> int main ( ) { int var = 010 ; printf ( " %d " , var ) ; }
#include <stdio.h> #define MAX 2 enum bird { SPARROW = MAX + 1 , PARROT = SPARROW + MAX } ; int main ( ) { enum bird b = PARROT ; printf ( " %d\n  " , b ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " sanfoundry\rclass\n  " ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " sanfoundry\r\n class\n  " ) ; return 0 ; }
#include <stdio.h> int main ( ) { const int p ; p = 4 ; printf ( " p is %d " , p ) ; return 0 ; }
#include <stdio.h> void main ( ) { int k = 4 ; int * const p = & k ; int r = 3 ; p = & r ; printf ( " %d " , p ) ; }
#include <stdio.h> void main ( ) { int const k = 5 ; k + + ; printf ( " k is %d " , k ) ; }
#include <stdio.h> int const print ( ) { printf ( " Sanfoundry.com " ) ; return 0 ; } void main ( ) { print ( ) ; }
#include <stdio.h> void main ( ) { int k = 4 ; float k = 4 ; printf ( " %d " , k ) }
#include <stdio.h> int main ( ) { int a = 1 , b = 2 ; a + = b - = a ; printf ( " %d %d " , a , b ) ; }
#include <stdio.h> int main ( ) { int a = 4 , n , i , result = 0 ; scanf ( " %d " , n ) ; for ( i = 0 ; i < n ; i + + ) result + = a ; }
#include <stdio.h> void main ( ) { int x = 5 ; if ( x < 1 ) printf ( " hello " ) ; if ( x = = 5 ) printf ( " hi " ) ; else printf ( " no " ) ; }
#include <stdio.h> int x ; void main ( ) { if ( x ) printf ( " hi " ) ; else printf ( " how are u " ) ; }
#include <stdio.h> void main ( ) { int x = 5 ; if ( true ) ; printf ( " hello " ) ; }
#include <stdio.h> void main ( ) { int x = 0 ; if ( x = = 0 ) printf ( " hi " ) ; else printf ( " how are u " ) ; printf ( " hello " ) ; }
#include <stdio.h> void main ( ) { int x = 5 ; if ( x < 1 ) ; printf ( " Hello " ) ; }
#include <stdio.h> int main ( ) { while ( ) printf ( " In while loop " ) ; printf ( " After loop\n  " ) ; }
#include <stdio.h> int main ( ) { do printf ( " In while loop " ) ; while ( 0 ) ; printf ( " After loop\n  " ) ; }
#include <stdio.h> int main ( ) { int i = 0 ; do { i + + ; printf ( " In while loop\n  " ) ; } while ( i < 3 ) ; }
#include <stdio.h> int main ( ) { int i = 0 ; do { i + + ; printf ( " in while loop\n  " ) ; } while ( i < 3 ) ; }
#include <stdio.h> int main ( ) { int i = 0 ; while ( i < 3 ) i + + ; printf ( " In while loop\n  " ) ; }
#include <stdio.h> void main ( ) { int i = 2 ; do { printf ( " Hi " ) ; } while ( i < 2 ) }
#include <stdio.h> void main ( ) { int i = 0 ; while ( + + i ) { printf ( " H " ) ; } }
#include <stdio.h> void main ( ) { int i = 0 ; do { printf ( " Hello " ) ; } while ( i ! = 0 ) ; }
#include <stdio.h> void main ( ) { int i = 5 , k ; if ( i = = 0 ) goto label ; label : printf ( " %d " , i ) ; printf ( " Hey " ) ; }
#include <stdio.h> int main ( ) { printf ( " %d " , 1 ) ; l1 : l2 : printf ( " %d " , 2 ) ; printf ( " %d\n  " , 3 ) ; }
#include <stdio.h> int main ( ) { printf ( " %d " , 1 ) ; goto l1 ; printf ( " %d " , 2 ) ; } void foo ( ) { l1 : printf ( " 3 " , 3 ) ; }
#include <stdio.h> int main ( ) { int i = 0 , j = 0 ; while ( i < 2 ) { l1 : i + + ; while ( j < 3 ) { printf ( " loop\n  " ) ; goto l1 ; } } }
#include <stdio.h> int main ( ) { int i = 0 , j = 0 ; while ( l1 : i < 2 ) { i + + ; while ( j < 3 ) { printf ( " loop\n  " ) ; goto l1 ; } } }
#include <stdio.h> int main ( ) { int i = 0 , j = 0 ; l1 : while ( i < 2 ) { i + + ; while ( j < 3 ) { printf ( " loop\n  " ) ; goto l1 ; } } }
#include <stdio.h> int i ; int main ( ) { extern int i ; if ( i = = 0 ) printf ( " scope rules\n  " ) ; }
#include <stdio.h> int main ( ) { extern ary1 [ ] ; printf ( " scope rules\n  " ) ; }
#include <stdio.h> int main ( ) { extern ary1 [ ] ; printf ( " %d\n  " , ary1 [ 0 ] ) ; }
#include <stdio.h> int main ( ) { int i ; for ( i = 0 ; i < 5 ; i + + ) int a = i ; printf ( " %d " , a ) ; }
#include <stdio.h> int b ; int main ( ) { int c ; return 0 ; } int a ;
#include <stdio.h> void func ( ) ; int main ( ) { static int b = 20 ; func ( ) ; } void func ( ) { static int b ; printf ( " %d " , b ) ; }
#include <stdio.h> int main ( ) { int one = 1 , two = 2 ; #ifdef next one = 2 ; two = 1 ; #endif printf ( " %d , %d " , one , two ) ; }
#include <stdio.h> #include " test.h " #include " test.h " int main ( ) {
#include <stdio.h> #define foo ( m , n ) m ## n void myfunc ( ) ; int main ( ) { myfunc ( ) ; } void myfunc ( ) { printf ( " %d\n  " , foo ( 2 , 3 ) ) ; }
#include <stdio.h> void main ( ) { #define max 37 ; printf ( " %d " , max ) ; }
#include <stdio.h> void main ( ) { #define max 37 printf ( " %d " , max ) ; }
#include <stdio.h> void main ( ) { #define const int const max = 32 ; printf ( " %d " , max ) ; }
#include <stdio.h> void main ( ) { #define max 45 max = 32 ; printf ( " %d " , max ) ; }
#include <stdio.h> # define max void m ( ) { printf ( " hi " ) ; } void main ( ) { max ; m ( ) ; }
#include <stdio.h> #define A 1 + 2 #define B 3 + 4 int main ( ) { int var = A * B ; printf ( " %d\n  " , var ) ; }
#include <stdio.h> #define var 20 ) ; int main ( ) { printf ( " %d\n  " , var }
#include <stdio.h> void main ( ) { char * s = " hello " ; char * p = s * 3 ; printf ( " %c\t %c " , * p , s [ 1 ] ) ; }
#include <stdio.h> void main ( ) { char * s = " hello " ; char * p = s + 2 ; printf ( " %c\t %c " , * p , s [ 1 ] ) ; }
#include <stdio.h> void main ( ) { int k = 5 ; int * p = & k ; int * * m = & p ; printf ( " %d %d %d\n  " , k , * p , * * m ) ; }
#include <stdio.h> void main ( ) { int k = 5 ; int * p = & k ; int * * m = & p ; printf ( " %d %d %d\n  " , k , * p , * * p ) ; }
#include <stdio.h> void main ( ) { int k = 5 ; int * p = & k ; int * * m = & p ; * * m = 6 ; printf ( " %d\n  " , k ) ; }
#include <stdio.h> void main ( ) { int a [ 3 ] = { 1 , 2 , 3 } ; int * p = a ; int * r = & p ; printf ( " %d " , ( * * r ) ) ; }
#include <stdio.h> void main ( ) { int a [ 3 ] = { 1 , 2 , 3 } ; int * p = a ; int * * r = & p ; printf ( " %p %p " , * r , a ) ; }
#include <stdio.h> int main ( ) { int a = 1 , b = 2 , c = 3 ; int * ptr1 = & a , * ptr2 = & b , * ptr3 = & c ; int * * sptr = & ptr1 ;
#include <stdio.h> void main ( ) { int a [ 3 ] = { 1 , 2 , 3 } ; int * p = a ; int * * r = & p ; printf ( " %p %p " , * r , a ) ; }
#include <stdio.h> int main ( ) { int a = 1 , b = 2 , c = 3 ; int * ptr1 = & a ; int * * sptr = & ptr1 ;
#include <stdio.h> int main ( ) { int a = 10 ; int * * c - = & & a ; }
#include <stdio.h> void main ( ) { int k = 5 ; int * p = & k ; int * * m = & p ; printf ( " %d %d %d\n  " , k , * p , * * m ) ; }
#include <stdio.h> void main ( ) { int k = 5 ; int * p = & k ; int * * m = & p ; printf ( " %d %d %d\n  " , k , * p , * * p ) ; }
#include <stdio.h> void main ( ) { int k = 5 ; int * p = & k ; int * * m = & p ; * * m = 6 ; printf ( " %d\n  " , k ) ; }
#include <stdio.h> void main ( ) { int a [ 3 ] = { 1 , 2 , 3 } ; int * p = a ; int * r = & p ; printf ( " %d " , ( * * r ) ) ; }
#include <stdio.h> int main ( ) { char * a [ 2 ] = { " hello " , " hi " } ; printf ( " %d " , sizeof ( a ) ) ; return 0 ; }
#include <stdio.h> int main ( ) { char a [ 2 ] [ 6 ] = { " hello " , " hi " } ; printf ( " %d " , sizeof ( a ) ) ; return 0 ; }
#include <stdio.h> int main ( ) { char a [ 2 ] [ 6 ] = { " hello " , " hi " } ; printf ( " %s " , * a + 1 ) ; return 0 ; }
#include <stdio.h> int main ( ) { char * a [ 2 ] = { " hello " , " hi " } ; printf ( " %s " , * ( a + 1 ) ) ; return 0 ; }
#include <stdio.h> void f ( int ) ; void ( * foo ) ( float ) = f ; int main ( ) { foo ( 10 ) ; } void f ( int i ) { printf ( " %d\n  " , i ) ; }
#include <stdio.h> struct student { char * name ; } ; void main ( ) { struct student s , m ; s.name = " st " ; m = s ; printf ( " %s %s " , s.name , m.name ) ; }
#include <stdio.h> struct student { char * c ; } ; void main ( ) { struct student m ; struct student * s = & m ; s-> c = " hello " ; printf ( " %s " , s-> c ) ; }
#include <stdio.h> struct student { char * c ; } ; void main ( ) { struct student * s ; s-> c = " hello " ; printf ( " %s " , s-> c ) ; }
#include <stdio.h> struct student { char * c ; } ; void main ( ) { struct student m ; struct student * s = & m ; s-> c = " hello " ; printf ( " %s " , m.c ) ; }
#include <stdio.h> struct student { char * c ; } ; void main ( ) { struct student m ; struct student * s = & m ; ( * s ) .c = " hello " ; printf ( " %s " , m.c ) ; }
#include <stdio.h> struct student { char * c ; struct student point ; } ; void main ( ) { struct student s ; s.c = " hello " ; printf ( " %s " , s.c ) ; }
#include <stdio.h> struct student { char * c ; struct student * point ; } ; void main ( ) { struct student s ; printf ( " %d " , sizeof ( s ) ) ; }
#include <stdio.h> struct student { char * c ; struct student * point ; } ; void main ( ) { struct student s ; struct student * m = & s ; printf ( " %d " , sizeof ( student ) ) ; }
#include <stdio.h> typedef struct student { char * a ; } stu ; void main ( ) { struct stu s ; s.a = " hi " ; printf ( " %s " , s.a ) ; }
#include <stdio.h> typedef struct student { char * a ; } stu ; void main ( ) { struct student s ; s.a = " hey " ; printf ( " %s " , s.a ) ; }
#include <stdio.h> typedef int integer ; int main ( ) { int i = 10 , * ptr ; float f = 20 ; integer j = i ; ptr = & j ; printf ( " %d\n  " , * ptr ) ; return 0 ; }
#include <stdio.h> typedef struct p { int x , y ; } ; int main ( ) { p k1 = { 1 , 2 } ; printf ( " %d\n  " , k1.x ) ; }
#include <stdio.h> typedef struct p { int x , y ; } k = { 1 , 2 } ; int main ( ) { p k1 = k ; printf ( " %d\n  " , k1.x ) ; }
#include <stdio.h> typedef struct p { int x , y ; } k ; int main ( ) { struct p p = { 1 , 2 } ; k k1 = p ; printf ( " %d\n  " , k1.x ) ; }
#include <stdio.h> union u { struct { unsigned char x : 2 ; unsigned int y : 2 ; } p ; int x ; } ; int main ( ) { union u u.p.x = 2 ; printf ( " %d\n  " , u.p.x ) ; }
#include <stdio.h> struct p { unsigned int x : 2 ; unsigned int y : 2 ; } ; int main ( ) { struct p p ; p.x = 3 ; p.y = 1 ; printf ( " %d\n  " , sizeof ( p ) ) ; }
#include <stdio.h> struct p { unsigned int x : 2 ; unsigned int y : 2 ; } ; int main ( ) { struct p p ; p.x = 3 ; p.y = 4 ; printf ( " %d\n  " , p.y ) ; }
#include <stdio.h> struct p { unsigned int x : 7 ; unsigned int y : 2 ; } ; int main ( ) { struct p p ; p.x = 110 ; p.y = 2 ; printf ( " %d\n  " , p.x ) ; }
#include <stdio.h> struct p { unsigned int x : 1 ; unsigned int y : 1 ; } ; int main ( ) { struct p p ; p.x = 1 ; p.y = 2 ; printf ( " %d\n  " , p.y ) ; }
#include <stdio.h> int main ( ) { FILE * fp = stdin ; int n ; fprintf ( fp , " %d " , 45 ) ; }
#include <stdio.h> #include <stdlib.h> int main ( ) { FILE * fp = stdout ; int n ; fprintf ( fp , " %d " , 45 ) ; }
#include <stdio.h> int main ( ) { FILE * fp = stdout ; int n ; fprintf ( fp , " %d " , 45 ) ; fprintf ( stderr , " %d " , 65 ) ; return 0 ; }
#include <stdio.h> int main ( ) { FILE * fp = stdout ; int n ; fprintf ( fp , " %d\n  " , 45 ) ; fprintf ( stderr , " %d " , 65 ) ; return 0 ; }
#include <stdio.h> int main ( ) { FILE * fp = stdout ; int n ; fprintf ( fp , " %d " , 45 ) ; fflush ( stdout ) ; fprintf ( stderr , " %d " , 65 ) ; return 0 ; }
#include <stdio.h> int main ( ) { char * str = " hello , world " ; char str1 [ 15 ] = " hello wo 9 " ; strcpy ( str , str1 ) ; printf ( " %s " , str1 ) ; }
#include <stdio.h> #include <string.h> int main ( ) { char * str = " hello , world " ; char str1 [ 9 ] ; strncpy ( str1 , str , 9 ) ; printf ( " %s %d " , str1 , strlen ( str1 ) ) ; }
#include <stdio.h> int main ( ) { char * str = " hello , world\n  " ; printf ( " %d " , strlen ( str ) ) ; }
#include <stdio.h> int main ( ) { char str [ 11 ] = " hello " ; char * str1 = " world " ; strcat ( str , str1 ) ; printf ( " %s %d " , str , str [ 10 ] ) ; }
#include <stdio.h> int main ( ) { char str [ 10 ] = " hello " ; char * str1 = " world " ; strncat ( str , str1 , 9 ) ; printf ( " %s " , str ) ; }
#include <stdio.h> int main ( ) { char n [ 20 ] ; fgets ( n , 19 , stdin ) ; ungetc ( n [ 0 ] , stdin ) ; printf ( " %s\n  " , n ) ; return 0 ; }
#include <stdio.h> void main ( ) { char * p = calloc ( 100 , 1 ) ; p = " welcome " ; printf ( " %s\n  " , p ) ; }
#include <stdio.h> printf ( " %.0f " , 2.89 ) ;
#include <stdio.h> int main ( ) { float a = 2.455555555555 ; printf ( " %f " , a ) ; }
#include <stdio.h> printf ( " %d " , sizeof ( 'a' ) ) ;
#include <stdio.h> union temp { char a ; char b ; int c ; } t ; int main ( ) { printf ( " %d " , sizeof ( t ) ) ; return 0 ; }
#include <stdio.h> int main ( void ) { int num1 , num2 ; int sum ; num1 = num2 = 10 ; sum = num1 + num2 ; * Result is assigned to sum by the assignment operator. * / -num1 ; --num1 ; return 0 ; }
#include <stdio.h> int main ( void ) { int num = 1 ; while ( num < = 25 ) { printf ( " %4d %6d\n  " , num , num * num ) ; num = num + 1 ; } return 0 ; }
#include <stdio.h> int main ( void ) { int a ; a = getval ( ) ; count ( a ) ; while ( a > 0 ) { ... a = getval ( ) ; count ( a ) ; } return 0 ; }
#include <stdio.h> int main ( void ) { int a ; while ( a = getval ( ) , count ( a ) , a > 0 ) { ... } return 0 ; }
#include <stddef.h> #include <stdio.h> size_t flexsize ( int n ) { char b [ n + 3 ] ; return sizeof b ; } int main ( void ) { size_t size = flexsize ( 10 ) ; return 0 ; }
#include <stdio.h> int main ( void ) { int i = 10 , j = 20 , k = 50 ; float cm = 10.5 , mm = 20.9 , inch = 12 ; 5 = 10 ; return 0 ; }
#include <stdio.h> int main ( void ) { char name = 'A' ; 'A' = 10 ; return 0 ; }
#include <stdio.h> int main ( void ) { int n = 5 ; long double x ; int * pi = & n ; long double * pld = & x ; x = n ; pld = pi ; return 0 ; }
#include <stdio.h> int main ( void ) { const int gz = 122 ; gz = 111 ; return 0 ; }
#include <stdio.h> void hahaha ( void ) ; int main ( void ) { hahaha ( ) ; return 0 ; } void hahaha ( void ) { printf ( " ha ha ha!\n  " ) ; }
#include <stdio.h> int main ( void ) { int num = 100 ; for ( ; num > = 1 ; num-- ) { printf ( " %d\n  " , num ) ; } return 0 ; }
#include <stdio.h> int main ( void ) { static int i ; printf ( " Default Value of \ " static variable i\ " is %d\n  " , i ) ; return 0 ; }
#include <stdio.h> int main ( void ) { int * x = 10 , y ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Hello World!\n  " ) ; return 0 ; }
#include <stdio.h> int main ( void ) { printf ( " Hello World!\n  " ) ; return 0 ; }
#include <stdio.h> #include <stdlib.h> #define TRUE 1 #define FALSE 0 #define SIZE 512 #define MAX ( a , b ) ( ( a ) > ( b ) ? ( a ) : ( b ) )
#include <stdio.h> int main ( void ) { #if defined ( OS_LINUX ) #ifdef OPTION1 os_linux_version_option1 ( ) ; #endif #ifdef OPTION2 os_linux_version_option2 ( ) ; #endif #elif defined ( MS_DOS ) #ifdef OPTION2 os_ms_dos_version_option2 ( ) ; #endif #endif return 0 ; }
#include <stdio.h> #include <stdlib.h> #define BUFFSIZE 512 void sum2ints ( const int , const int ) ; void sum2floats ( const float , const float ) ;
#include <stdio.h> int main ( void ) { char * str ; printf ( " how are you , dear xyz?\n  " ) ; gets ( str ) ; return 0 ; }
#include <stdio.h> #include <stdlib.h> #include <signal.h> int main ( void ) { signal ( SIGINT , SIG_DFL ) ; while ( 1 ) return 0 ; }
#include <stdio.h> #include <stdlib.h> #include <signal.h> int main ( void ) { signal ( SIGINT , SIG_IGN ) ; while ( 1 ) ; return 0 ; }
#include <signal.h> #include <stdio.h> void handler ( int signal ) { if ( signal = = SIGINT ) } int main ( void ) { signal ( SIGINT , handler ) ; return 0 ; }
#include <stdio.h> #include <stdlib.h> int main ( void ) { abort ( ) ; printf ( " \ " abort ( ) called prior to printf ( ) \ " \n  " ) ; return 0 ; }
#include <stdio.h> #include <stdlib.h> int main ( void ) { printf ( " %d\n  " , abs ( 92.09998 ) ) ; printf ( " %ld\n  " , labs ( 123.88L ) ) ; return 0 ; }
#include <stdio.h> #include <stdlib.h> #include <assert.h> int main ( void ) { int status ; assert ( ( system ( NULL ) ) ! = 0 ) ; system ( " ls -l " ) ; exit ( 0 ) ; }
#include <stdio.h> int main ( void ) { int i , j = 0 ; for ( i = 0 ; i < 10 ; i + + ) j = j + 1 ; return 0 ; }
#include <stdio.h> #include <stdlib.h> #include <signal.h> int main ( void ) { signal ( SIGINT , SIG_DFL ) ; while ( 1 ) return 0 ; }
#include <stdio.h> #include <stdlib.h> #include <signal.h> int main ( void ) { signal ( SIGINT , SIG_IGN ) ; while ( 1 ) ; return 0 ; }
#include <stdio.h> #include <stdlib.h> struct btnode { int value ; struct btnode * l ; struct btnode * r ; } * root = NULL ;
#include <stdio.h> void combinationUtil ( int arr [ ] , int data [ ] , int start , int end , int index , int r ) { int j , i ;
#include <stdio.h> void combinationUtil ( int arr [ ] , int data [ ] , int start , int end , int index , int r ) { int j , i ;
#include <stdio.h> int main ( ) { printf ( " Hello World! " ) ; getch ( ) ; return 0 ; }
#include <stdio.h> #include <stdlib.h> int main ( ) { printf ( " Directory = %s\n  " , getenv ( " DIR " ) ) ; return 0 ; }
#include <stdio.h> #include <stdlib.h> int main ( ) { setenv ( " FILE " , " / usr / bin / example.c " , 50 ) ; printf ( " File = %s\n  " , getenv ( " FILE " ) ) ; return 0 ; }
#include <stdio.h> int main ( ) { int i ; for ( i = 0 ; i <10 ; i + + ) { printf ( " %d " , i ) ; } }
#include <stdio.h> int main ( ) { int i = 3 ; while ( i <10 ) { printf ( " %d\n  " , i ) ; i + + ; } }
#include <stdio.h> int main ( ) { int i = 1 ; do { printf ( " Value of i is %d\n  " , i ) ; i + + ; } while ( i < = 4 & & i> = 2 ) ; }
#include <stdio.h> int main ( ) { char string [ 20 ] = " fresh2refresh.com " ; printf ( " The string is : %s \n  " , string ) ; return 0 ; }
#include <stdio.h> int main ( ) { int * ptr , q ; q = 50 ; ptr = & q ; printf ( " %d " , * ptr ) ; return 0 ; }
#include <stdio.h> #include <dos.h> int main ( ) { struct date dt ; getdate ( & dt ) ; printf ( " Operating system's current date is %d- %d- %d\n  " , dt.da_day , dt.da_mon , dt.da_year ) ; return 0 ; }
#include <stdio.h> #include <time.h> int main ( ) { time_t seconds ; seconds = time ( NULL ) ; printf ( " Number of hours since 1970 Jan 1st " \ " is %ld \n  " , seconds / 3600 ) ; return 0 ; }
#include <stdio.h> #include <time.h> int main ( ) { time_t orig_format ; time ( & orig_format ) ; printf ( " Universal Time is %s " , asctime ( gmtime ( & orig_format ) ) ) ; return 0 ; }
#include <stdio.h> int main ( ) { float x ; x = ( float ) 7 / 5 ; printf ( " %f " , x ) ; }
#include <stdio.h> #include <stdlib.h> int main ( ) { printf ( " Directory = %s\n  " , getenv ( " DIR " ) ) ; return 0 ; }
#include <stdio.h> #include <stdlib.h> int main ( ) { setenv ( " FILE " , " / usr / bin / example.c " , 50 ) ; printf ( " File = %s\n  " , getenv ( " FILE " ) ) ; return 0 ; }
#include <stdio.h> #include <stdlib.h> int main ( ) { printf ( " Suspends the execution of the program " \ " for particular time " ) ; delay ( 5000 ) ; return 0 ; }
#include <stdio.h> #include <limits.h> int main ( ) { typedef long long int LLI ; printf ( " Storage size for long long int data " \ " type : %ld \n  " , sizeof ( LLI ) ) ; return 0 ; }
#include <stdio.h> #define height 100 void main ( ) { printf ( " First defined value for height : %d\n  " , height ) ; #undef height #define height 600 printf ( " value of height after undef \ & redefine : %d " , height ) ; }
#include <stdio.h> #define concatination ( a , b ) a ## b int main ( ) { int ab = 1000 ; printf ( " The concatenated value is : %d \n  " , concatination ( a , b ) ) ; return 0 ; }
#include <stdio.h> #define max 100 int main ( ) { printf ( " max is %d " , max ) ; return 0 ; }
#include <stdio.h> #define MULTIPLY ( a , b ) a * b int main ( ) { printf ( " %d " , MULTIPLY ( 2 + 3 , 3 + 5 ) ) ; return 0 ; }
#include <stdio.h> #define MULTIPLY ( a , b ) ( a ) * ( b ) int main ( ) { printf ( " %d " , MULTIPLY ( 2 + 3 , 3 + 5 ) ) ; return 0 ; }
#include <stdio.h> #define merge ( a , b ) a##b int main ( ) { printf ( " %d " , merge ( 12 , 34 ) ) ; }
#include <stdio.h> #define get ( a ) #a int main ( ) { printf ( " %s " , get ( GeeksQuiz ) ) ; }
#include <stdio.h> #define LIMIT 100 int main ( ) { printf ( " %d " , LIMIT ) ; #undef LIMIT printf ( " %d " , LIMIT ) ; return 0 ; }
#include <stdio.h> #define LIMIT 1000 int main ( ) { printf ( " %d " , LIMIT ) ; #undef LIMIT int LIMIT = 1001 ; printf ( " \n  %d " , LIMIT ) ; return 0 ; }
#include <stdio.h> int main ( void ) { printf ( " My mobile number " " is 7\a8\a7\a3\a9\a2\a3\a4\a0\a8\a " ) ; return ( 0 ) ; }
#include <stdio.h> int main ( void ) { printf ( " Hello Geeks\b\b\b\bF " ) ; return ( 0 ) ; }
#include <stdio.h> int main ( void ) { printf ( " Hello\n  " ) ; printf ( " GeeksforGeeks " ) ; return ( 0 ) ; }
#include <stdio.h> int main ( void ) { printf ( " Hello \t GFG " ) ; return ( 0 ) ; }
#include <stdio.h> int main ( void ) { printf ( " Hello friends " ) ; printf ( " \v Welcome to GFG " ) ; return ( 0 ) ; }
#include <stdio.h> int main ( void ) { printf ( " Hello fri \r ends " ) ; return ( 0 ) ; }
#include <stdio.h> int main ( void ) { printf ( " Hello\\GFG " ) ; return ( 0 ) ; }
#include <stdio.h> int main ( void ) { printf ( " \' Hello Geeks\n  " ) ; printf ( " \ " Hello Geeks " ) ; return 0 ; }
#include <stdio.h> int main ( void ) { printf ( " \?\?!\n  " ) ; return 0 ; }
#include <stdio.h> int main ( void ) { char * s = " A\0725 " ; printf ( " %s " , s ) ; return 0 ; }
#include <stdio.h> int main ( void ) { char * s = " B\x4a " ; printf ( " %s " , s ) ; return 0 ; }
#include <stdio.h> static int animals = 8 ; const int i = 5 ; int call_me ( void ) { printf ( " %d %d " , i , animals ) ; }
#include <stdio.h> int main ( ) { call_me ( ) ; animals = 2 ; printf ( " %d " , animals ) ; return 0 ; }
#include <stdio.h> #include " animal.cpp " int main ( ) { call_me ( ) ; printf ( " \n  having fun washing! " ) ; animals = 10 ; printf ( " %d\n  " , animals ) ; return 0 ; }
#include <stdio.h> void foo ( ) { int a ; extern int b ; } void bar ( ) { int c ; c = b ; } int main ( ) { foo ( ) ; bar ( ) ; }
#include <stdio.h> int x = 10 ; int z = 5 ; int main ( ) { extern int y ; extern int z ; printf ( " %d %d %d " , x , y , z ) ; } int y = 2 ;
#include <stdio.h> int main ( ) { const int num = 1 ; num = 5 ; return 0 ; }
#include <iostream> int main ( ) { int var = 5 ; constexpr int k = var ; std : : cout < < k ; return 0 ; }
#include <stdio.h> #define var 5 int main ( ) { printf ( " %d " , var ) ; #ifdef var #undef var #define var 10 #endif printf ( " %d " , var ) ; return 0 ; }
#include <stdio.h> #include <stdlib.h> int main ( void ) { static int * p = ( int * ) malloc ( sizeof ( p ) ) ; * p = 10 ; printf ( " %d " , * p ) ; }
#include <stdio.h> #include <stdlib.h> int * p = ( int * ) malloc ( sizeof ( p ) ) ; int main ( void ) { * p = 10 ; printf ( " %d " , * p ) ; }
#include <stdio.h> int fun ( int x ) { return ( x + 5 ) ; } int y = fun ( 20 ) ; int main ( ) { printf ( " %d " , y ) ; }
#include <stdio.h> int main ( ) { char a = 30 , b = 40 , c = 10 ; char d = ( a * b ) / c ; printf ( " %d " , d ) ; return 0 ; }
#include <stdio.h> int main ( ) { float x = 0.1 ; printf ( " %d %d %d " , sizeof ( x ) , sizeof ( 0.1 ) , sizeof ( 0.1f ) ) ; return 0 ; }
#include <stdio.h> int main ( ) { char ch1 = 125 , ch2 = 10 ; ch1 = ch1 + ch2 ; printf ( " %d\n  " , ch1 ) ; printf ( " %c\n  " , ch1 - ch2 - 4 ) ; return 0 ; }
#include <stdio.h> int main ( ) { double x = 1.2 ; int sum = ( int ) x + 1 ; printf ( " sum = %d " , sum ) ; return 0 ; }
#include " somefile.h " extern int var ; int main ( void ) { var = 10 ; return 0 ; }
#include <stdio.h> int main ( ) { int x = 10 ; int y = 15 ; printf ( " %d " , ( x , y ) ) ; getchar ( ) ; return 0 ; }
#include <stdio.h> int main ( ) { int x = 10 ; int y = ( x + + , + + x ) ; printf ( " %d " , y ) ; getchar ( ) ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { int x = 10 , y = 10 ; cout < < sizeof ( x = = y ) < < endl ; cout < < sizeof ( x < y ) ; return 0 ; }
#include <stdio.h> int main ( ) { int a = sizeof ( printf ( " hey " ) ) ; printf ( " %d " , a ) ; return 0 ; }
#include <stdio.h> int main ( ) { int a = 5 ; int b = sizeof ( a = 6 ) ; printf ( " a = %d , b = %d\n  " , a , b ) ; return 0 ; }
#include <stdio.h> #define mkstr ( s ) #s int main ( void ) { printf ( mkstr ( geeksforgeeks ) ) ; return 0 ; }
#include <iostream> using namespace std ; #define a 8.3297 int main ( ) { cout < < " Value of a is " < < a < < endl ; return 0 ; }
#include <stdio.h> #define concat ( a , b ) a##b int main ( void ) { int xy = 30 ; printf ( " %d " , concat ( x , y ) ) ; return 0 ; }
#include <stdio.h> #define MACRO ( num , str ) { \ printf ( " %d " , num ) ; \ printf ( " is " ) ; \ printf ( " %s number " , str ) ; \ printf ( " \n  " ) ; \ }
#include <stdio.h> #include " myhead.h " int main ( ) { add ( 4 , 6 ) ; multiply ( 5 , 5 ) ; printf ( " BYE!See you Soon " ) ; return 0 ; }
#include <stdio.h> int main ( void ) { char generate [ L_tmpnam + 1 ] ; tmpnam ( generate ) ; puts ( generate ) ; return 0 ; }
#include <stdio.h> typedef unsigned char BYTE ; int main ( ) { BYTE b1 , b2 ; b1 = 'c' ; printf ( " %c " , b1 ) ; return 0 ; }
#include <stdio.h> #define HYD " Hyderabad " int main ( ) { printf ( " %s " , HYD ) ; return 0 ; }
#include <stdio.h> #include <unistd.h> int main ( ) { int i ; printf ( " I am EXEC.c called by execvp ( ) " ) ; printf ( " \n  " ) ; return 0 ; }
#include <stdio.h> #include <stdlib.h> #include <unistd.h> int main ( ) { char * args [ ] = { " . / EXEC " , NULL } ; execvp ( args [ 0 ] , args ) ; printf ( " Ending----- " ) ; return 0 ; }
#include <stdio.h> #include <unistd.h> int main ( ) { int i ; printf ( " I am EXEC.c called by execv ( ) " ) ; printf ( " \n  " ) ; return 0 ; }
#include <stdio.h> #include <stdlib.h> #include <unistd.h> int main ( ) { char * args [ ] = { " . / EXEC " , NULL } ; execv ( args [ 0 ] , args ) ; printf ( " Ending----- " ) ; return 0 ; }
#include <stdio.h> int main ( ) { int arr [ ] = { 10 , 20 } , x = 10 ; int * ptr = & x ; arr = & x ; return 0 ; }
#include <stdio.h> #include <string.h> int main ( ) { char source [ ] = " GeeksForGeeks " ; char * target = strdup ( source ) ; printf ( " %s " , source ) ; return 0 ; }
#include <stdio.h> #include <string.h> int main ( ) { char source [ ] = " GeeksForGeeks " ; char * target = strndup ( source , 5 ) ; printf ( " %s " , target ) ; return 0 ; }
#include <bits / stdc + + .h> using namespace std ; int main ( ) { string str = " geeksforgeeks " ; reverse ( str.begin ( ) , str.end ( ) ) ; cout < < str ; return 0 ; }
#include <stdio.h> #include <string.h> int main ( ) { int len = strspn ( " geeks for geeks " , " geek " ) ; printf ( " Length of initial segment matching : %d\n  " , len ) ; return ( 0 ) ; }
#include <stdio.h> #include <string.h> int main ( ) { int len = strspn ( " i am " , " xyz " ) ; printf ( " Length of initial segment matching : %d\n  " , len ) ; return ( 0 ) ; }
#include <stdio.h> #include <stdlib.h> _Noreturn void view ( ) { return 10 ; } int main ( void ) { printf ( " Ready to begin...\n  " ) ; view ( ) ; printf ( " NOT over till now\n  " ) ; return 0 ; }
#include “studio.h” int main ( ) { printf ( “ %s” , __func__ ) ; return 0 ; }
#include “stdio.h” void foo ( void ) { printf ( “ %s” , __func__ ) ; } void bar ( void ) { printf ( “ %s” , __func__ ) ; } int main ( ) { foo ( ) ; bar ( ) ; return 0 ; }
#include “stdio.h” int __func__ = 10 ; int main ( ) { printf ( “ %d” , __func__ ) ; return 0 ; }
#include " stdio.h " int main ( ) { printf ( " In file : %s , function : %s ( ) and line : %d " , __FILE__ , __func__ , __LINE__ ) ; return 0 ; }
#include <stdio.h> int main ( void ) { printf ( " Main " ) ; int fun ( ) { printf ( " fun " ) ; int view ( ) { printf ( " view " ) ; } return 1 ; } view ( ) ; }
#include <ctype.h> #include <stdio.h> int main ( ) { char ch = 'G' ; printf ( " %c in lowercase is represented as = %c " , ch , tolower ( ch ) ) ; return 0 ; }
#include <stdio.h> #include <time.h> int main ( ) { time_t seconds ; seconds = time ( NULL ) ; printf ( " Seconds since January 1 , 1970 = %ld\n  " , seconds ) ; return ( 0 ) ; }
#include <stdio.h> #include <time.h> int main ( ) { time_t seconds ; time ( & seconds ; ) ; printf ( " Seconds since January 1 , 1970 = %ld\n  " , seconds ) ; return 0 ; }
#include <stdio.h> void fun ( int a ) { printf ( " Value of a is %d\n  " , a ) ; } int main ( ) { void ( * fun_ptr ) ( int ) = fun ; fun_ptr ( 10 ) ; return 0 ; }
#include <stdio.h> struct test { unsigned int x ; unsigned int y : 33 ; unsigned int z ; } ; int main ( ) { printf ( " %d " , sizeof ( struct test ) ) ; return 0 ; }
#include <stdio.h> #include <stdlib.h> int main ( void ) { int * ptr = ( int * ) malloc ( 10 ) ; return 0 ; }
#include <stdio.h> #include <stdlib.h> int main ( void ) { int * ptr = ( int * ) malloc ( 10 ) ; realloc ( ptr , 0 ) ; return 0 ; }
#include <stdio.h> int main ( void ) { printf ( " Welcome to GeeksforGeeks " ) ; return 0 ; }
#include <stdio.h> int main ( void ) { printf ( " Welcome to GeeksforGeeks " ) ; return 0 ; }
#include <stdio.h> struct s { int i ; char ch ; double d ; } ; int main ( ) { struct s A ; printf ( " Size of A is : %ld " , sizeof ( A ) ) ; }
#include <stdio.h> #pragma pack ( 1 ) struct s { int i ; char ch ; double d ; } ; int main ( ) { struct s A ; printf ( " Size of A is : %ld " , sizeof ( A ) ) ; }
#include <stdio.h> struct s { int i ; char ch ; double d ; } __attribute__ ( ( packed ) ) ; int main ( ) { struct s A ; printf ( " Size of A is : %ld " , sizeof ( A ) ) ; }
#include <stdio.h> #pragma warn -rvl #pragma warn -par #pragma warn -rch int show ( int x ) { printf ( " GEEKSFORGEEKS " ) ; } int main ( ) { show ( 10 ) ; return 0 ; }
#include <stdio.h> #pragma GCC poison printf int main ( ) { int a = 10 ; if ( a = = 10 ) { printf ( " GEEKSFORGEEKS " ) ; } else printf ( " bye " ) ; return 0 ; }
#include <stdio.h> inline int foo ( ) { return 2 ; } int main ( ) { int ret ; ret = foo ( ) ; printf ( " Output is : %d\n  " , ret ) ; return 0 ; }
#include <stdio.h> static inline int foo ( ) { return 2 ; } int main ( ) { int ret ; ret = foo ( ) ; printf ( " Output is : %d\n  " , ret ) ; return 0 ; }
#include <stdio.h> int main ( ) { const int var = 10 ; var = 15 ; printf ( " var = %d\n  " , var ) ; return 0 ; }
#include <stdio.h> #include <stdlib.h> int main ( ) { const int var = 10 ; int * ptr = & var ; * ptr = 12 ; printf ( " var = %d\n  " , var ) ; return 0 ; }
#include <stdio.h> int main ( ) { char str [ 20 ] ; printf ( " enter something\n  " ) ; scanf ( " %s " , str ) ; printf ( " you entered : %s\n  " , str ) ; return 0 ; }
#include <stdio.h> int main ( ) { char str [ 20 ] ; printf ( " enter something\n  " ) ; gets ( str ) ; printf ( " you entered : %s\n  " , str ) ; return 0 ; }
#include <stdio.h> int main ( ) { char str [ 20 ] ; printf ( " Enter something\n  " ) ; scanf ( " % [ ^\n  ] s " , str ) ; printf ( " %s " , str ) ; return 0 ; }
#include <stdio.h> #include <string.h> int main ( ) { char ch [ ] = { 'g' , 'e' , 'e' , 'k' , 's' , '\0' } ; printf ( " Length of string is : %d " , strlen ( ch ) ) ; return 0 ; }
#include <stdio.h> #include <string.h> int main ( ) { char str [ ] = " geeks " ; printf ( " Length of string is : %d " , strlen ( str ) ) ; return 0 ; }
#include <stdio.h> #include <string.h> int main ( ) { char * str = " geeks " ; printf ( " Length of string is : %d " , strlen ( str ) ) ; return 0 ; }
#include <stdio.h> int main ( ) { int x = 3 ; printf ( " %d\n  " , sizeof ( x + + ) ) ; printf ( " x = %d " , x ) ; return 0 ; }
#include <stdio.h> int main ( ) { int x = 3 ; printf ( " %d\n  " , sizeof ( int [ x + + ] ) ) ; printf ( " x = %d " , x ) ; return 0 ; }
#include <stdio.h> int main ( ) { int x = 3 ; printf ( " %d\n  " , sizeof ( int [ + + x ] ) ) ; printf ( " x = %d " , x ) ; return 0 ; }
#include <ctype.h> #include <stdio.h> int main ( ) { char ch ; ch = 'g' ; printf ( " %c in uppercase is represented as %c " , ch , toupper ( ch ) ) ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { float var = 37.66666 ; printf ( " %.2f " , var ) ; return 0 ; }
#include <stdio.h> int main ( ) { int x = 012 ; printf ( " %d " , x ) ; return 0 ; }
#include <stdio.h> int main ( ) { char str [ ] = " 31\01267 " ; printf ( " %s " , str ) ; return 0 ; }
#include <stdbool.h> int main ( ) { bool arr [ 2 ] = { true , false } ; return 0 ; }
#include <stdio.h> int main ( ) { static int x ; int y ; printf ( " %d \n  %d " , x , y ) ; }
#include <stdio.h> int initializer ( void ) { return 50 ; } int main ( ) { static int i = initializer ( ) ; printf ( " value of i = %d " , i ) ; getchar ( ) ; return 0 ; }
#include <stdio.h> #define getName ( var ) #var int main ( ) { int myVar ; printf ( " %s " , getName ( myVar ) ) ; return 0 ; }
#include <stdio.h> enum week { Mon , Tue , Wed , Thur , Fri , Sat , Sun } ; int main ( ) { enum week day ; day = Wed ; printf ( " %d " , day ) ; return 0 ; }
#include <stdio.h> enum State { Working = 1 , Failed = 0 , Freezed = 0 } ; int main ( ) { printf ( " %d , %d , %d " , Working , Failed , Freezed ) ; return 0 ; }
#include " stdio.h " int main ( ) { printf ( " %d %d %d " , sizeof ( float ) , sizeof ( double ) , sizeof ( long double ) ) ; return 0 ; }
#include " stdio.h " #define PI 3.14 int main ( ) { printf ( " %d " , sizeof ( PI ) ) ; return 0 ; }
#include " stdio.h " int main ( ) { printf ( " %d %d " , sizeof ( 3.14F ) , sizeof ( 3.14L ) ) ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { double x = 1.2 ; int sum = ( int ) x + 1 ; cout < < " Sum = " < < sum ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { float f = 3.5 ; int b = static_cast <int> ( f ) ; cout < < b ; }
#include <stdio.h> int main ( ) { char a = 278 ; printf ( " %d " , a ) ; return 0 ; }
#include <stdio.h> int main ( ) { char a = -129 ; printf ( " %d " , a ) ; return 0 ; }
#include <stdio.h> #define MAX 100 int main ( ) { float x = 123.4567 ; char buf [ MAX ] ; gcvt ( x , 6 , buf ) ; printf ( " buffer is : %s\n  " , buf ) ; return 0 ; }
#include <stdio.h> int main ( ) { int x = NULL ; }
#include <stdio.h> int main ( ) { int x = nullptr ; }
#include <iostream> using namespace std ; int main ( ) { int * ptr = nullptr ; if ( ptr ) { cout < < " true " ; } else { cout < < " false " ; } }
#include <iostream> #define LIMIT 5 int main ( ) { for ( int i = 0 ; i < LIMIT ; i + + ) { std : : cout < < i < < " \n  " ; } return 0 ; }
#include <iostream> using namespace std ; class Empty { } ; int main ( ) { cout < < sizeof ( Empty ) ; return 0 ; }
#include <iostream> using namespace std ; class Empty { } ; class Derived : Empty { int a ; } ; int main ( ) { cout < < sizeof ( Derived ) ; return 0 ; }
#include <stdio.h> int main ( ) { char ch = 'G' ; putchar ( ch ) ; return ( 0 ) ; }
#include <stdio.h> int main ( ) { char ch = '1' ; for ( ch = '1' ; ch < = '9' ; ch + + ) putchar ( ch ) ; return ( 0 ) ; }
#include & lt ; iostream & gt ; using namespace std ; int main ( ) { cout & lt ; < " Hello World " ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { int a = 5 , b = 10 , sum ; sum = a + b ; cout < < sum ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { int a = 5 , b = 10 ; if ( a > b ) cout < < a ; else cout < < b ; return 0 ; }
#include & lt ; iostream & gt ; using namespace std ; int main ( ) { cout & lt ; < " Hello World " ; return 0 ; }
#include <stdio.h> int main ( ) { int a = 0 ; double d = 10.21 ; printf ( " %d " , sizeof ( a + d ) ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " %d " , sizeof ( 'a' ) ) ; return 0 ; }
#include <stdio.h> int T ; int main ( ) { struct T { double x ; } ; printf ( " %d " , sizeof ( T ) ) ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { int x , y ; x = 1 ; y = compl x ; cout < < y ; return 0 ; }
#include <stdio.h> int main ( ) { foo ( ) ; } int foo ( ) { printf ( " Hello " ) ; return 0 ; }
#include <stdio.h> int main ( void ) { int const j = 20 ; int * ptr = & j ; printf ( " * ptr : %d\n  " , * ptr ) ; return 0 ; }
#include <stdio.h> int main ( ) { void * vptr ; int * iptr = vptr ; return 0 ; }
#include <stdio.h> int main ( ) { const int a ; return 0 ; }
#include <stdio.h> int main ( void ) { int new = 5 ; printf ( " %d " , new ) ; }
#include <stdio.h> int main ( ) { char * c = 333 ; printf ( " c = %u " , c ) ; return 0 ; }
#include <stdio.h> void main ( ) { printf ( " Hello World " ) ; }
#include <iostream> using namespace std ; int main ( ) { cout < < " Hello World! " < < endl ; system ( " pause " ) ; return 0 ; }
#include <iostream> #include <cstdlib> using namespace std ; int main ( ) { cout < < " Hello World! " < < endl ; cin.get ( ) ; return 0 ; }
#include <iostream> #include <cstdlib> using namespace std ; int main ( ) { if ( system ( NULL ) ) cout < < " Command processor exists " ; else cout < < " Command processor doesn't exists " ; return 0 ; }
#include <stdio.h> void fun ( int x ) { x = 30 ; } int main ( void ) { int x = 20 ; fun ( x ) ; printf ( " x = %d " , x ) ; return 0 ; }
#include <stdio.h> int main ( ) { char s [ ] = " geeksquiz " ; printf ( " %lu " , sizeof ( s ) ) ; s [ 0 ] = 'j' ; printf ( " \n  %s " , s ) ; return 0 ; }
#include <stdio.h> int main ( ) { char * s = " geeksquiz " ; printf ( " %lu " , sizeof ( s ) ) ; return 0 ; }
#include <stdio.h> int main ( ) { const char * s = " geeksquiz " ; printf ( " %lu " , sizeof ( s ) ) ; return 0 ; }
#include <iostream> #include <cstdlib> using namespace std ; int main ( ) { int * arr = ( int * ) malloc ( sizeof ( float ) * 20 ) ; return 0 ; }
#include <stdio.h> int main ( ) { int i = 10 ; int c = 10 ; switch ( c ) { case i : printf ( " Value of c = %d " , c ) ; break ; } return 0 ; }
#include <stdio.h> int main ( ) { const int i = 10 ; int c = 10 ; switch ( c ) { case i : printf ( " Value of c = %d " , c ) ; break ; } return 0 ; }
#include <iostream> class Test { static Test * fun ( ) { return this ; } } ; int main ( ) { getchar ( ) ; return 0 ; }
#include <iostream> class Test { static void fun ( ) { } void fun ( ) { } } ; int main ( ) { getchar ( ) ; return 0 ; }
#include <iostream> class Test { static void fun ( ) const { return ; } } ; int main ( ) { getchar ( ) ; return 0 ; }
#include <iostream> int main ( ) { int main = 10 ; std : : cout < < main ; return 0 ; }
#include <stdio.h> void myStartupFun ( void ) __attribute__ ( ( constructor ) ) ; void myStartupFun ( void ) { printf ( " GeeksforGeeks " ) ; } int main ( ) { }
#include <stdio.h> #include <stdlib.h> int main ( void ) { } void _start ( void ) { printf ( " GeeeksforGeeks " ) ; int var = main ( ) ; exit ( var ) ; }
#include <iostream> class MyClass { public : MyClass ( ) { std : : cout < < " GeeksforGeeks " ; } } m ; int main ( ) { }
#include <iostream> struct Mystruct { Mystruct ( ) { std : : cout < < " GeeksforGeeks " ; } } obj ; int main ( ) { }
#include <cstdio> int var = printf ( " GeeksforGeeks " ) ; int main ( ) { }
#include <stdio.h> #include <string.h> int main ( ) { char str [ ] = " geeksforgeeks is the best " ; printf ( " %s\n  " , strupr ( str ) ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " %d " , NULL ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " %d " , sizeof ( NULL ) ) ; return 0 ; }
#include <stdio.h> int main ( ) { int * ptr = NULL ; printf ( " %d " , * ptr ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " %d " , sizeof ( void ) ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " %d " , sizeof ( void * ) ) ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { int x = 0101 ; cout < < x ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { int x = 020 ; cout < < x ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { int x = 090 ; cout < < x ; return 0 ; }
#include <stdio.h> void ( foo ) ( int n ) { printf ( " Function : %d " , n ) ; } int main ( ) { ( foo ) ( 4 ) ; return 0 ; }
#include <iostream> #include <locale.h> using namespace std ; int main ( ) { setlocale ( LC_MONETARY , " en_US.utf8 " ) ; struct lconv * lc = localeconv ( ) ; printf ( " %s " , lc-> currency_symbol ) ; return 0 ; }
#include <clocale> #include <iostream> using namespace std ; int main ( ) { char * s ; setlocale ( LC_ALL , " en_UA.utf8 " ) ; s = setlocale ( LC_ALL , NULL ) ; cout < < s < < " \n  " ; return 0 ; }
#include <stdio.h> #include <string.h> int main ( ) { char str [ ] = " GEEKSFORGEEKS IS THE BEST " ; printf ( " %s\n  " , strlwr ( str ) ) ; return 0 ; }
#include <iostream> using namespace std ; void fun ( ) { class Test { } ; } int main ( ) { return 0 ; }
#include <iostream> using namespace std ; void fun ( ) { class Test { } ; Test t ; Test * tp ; } int main ( ) { Test t ; Test * tp ; return 0 ; }
#include <iostream> using namespace std ; void fun ( ) { class Test { static int i ; } ; } int main ( ) { return 0 ; }
#include <stdio.h> int main ( ) { char * p = NULL ; printf ( " %s " , p ) ; return 0 ; }
#include <stdio.h> #include <math.h> int main ( ) { float num = 5.48958123 ; num = floor ( 10000 * num ) / 10000 ; printf ( " %f " , num ) ; return 0 ; }
#include <stdio.h> int main ( ) { float num = 5.48958123 ; printf ( " %0.4f " , num ) ; return 0 ; }
#include <stdio.h> #include <time.h> int main ( ) { time_t curtime ; time ( & curtime ; ) ; printf ( " Current time = %s " , ctime ( & curtime ; ) ) ; return ( 0 ) ; }
#include <stdio.h> int main ( ) { char a123 = 'a' ; float b ; int _c , _d45 , e ; printf ( " %c \n  " , a123 ) ; return 0 ; }
#include <iostream> using namespace std ; enum week { Mon , Tue , Wed , Thur , Fri , Sat , Sun } ; int main ( ) { enum week day ; day = Wed ; cout < < day ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { for ( char a = 0 ; a < = 225 ; a + + ) cout < < a ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { bool a = true ; for ( a = 1 ; a < = 5 ; a + + ) cout < < a ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { short a ; for ( a = 32767 ; a < 32770 ; a + + ) cout < < a < < " \n  " ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { unsigned short a ; for ( a = 65532 ; a < 65536 ; a + + ) cout < < a < < " \n  " ; return 0 ; }
#include <iostream> using namespace std ; namespace first { int val = 500 ; } int val = 100 ; int main ( ) { int val = 200 ; cout < < first : : val < < '\n ' ; return 0 ; }
#include <stdio.h> int main ( ) { char ch = 'A' ; printf ( " %c\n  " , ch ) ; return 0 ; }
#include <stdio.h> int main ( ) { int x = 45 , y = 90 ; printf ( " %d\n  " , x ) ; printf ( " %i\n  " , x ) ; return 0 ; }
#include <stdio.h> int main ( ) { float a = 12.67 ; printf ( " %f\n  " , a ) ; printf ( " %e\n  " , a ) ; return 0 ; }
#include <stdio.h> int main ( ) { int a = 67 ; printf ( " %o\n  " , a ) ; return 0 ; }
#include <stdio.h> int main ( ) { int a = 15 ; printf ( " %x\n  " , a ) ; return 0 ; }
#include <stdio.h> int main ( ) { char a [ ] = " geeksforgeeks " ; printf ( " %s\n  " , a ) ; return 0 ; }
#include <stdio.h> int main ( ) { int a = 0 ; scanf ( " %d " , & a ; ) ; printf ( " %d\n  " , a ) ; return 0 ; }
#include <stdio.h> int main ( ) { float a = 0.0 ; scanf ( " %f " , & a ; ) ; printf ( " %f\n  " , a ) ; return 0 ; }
#include <stdio.h> int main ( ) { char str [ 20 ] ; scanf ( " %s " , str ) ; printf ( " %s\n  " , str ) ; return 0 ; }
#include <stdio.h> int main ( ) { char ch ; scanf ( " %c " , & ch ; ) ; printf ( " %c\n  " , ch ) ; return 0 ; }
#include <stdio.h> void fun1 ( ) { unsigned char i ; for ( i = 0 ; i <256 ; i + + ) printf ( " %d " , i ) ; } int main ( ) { fun1 ( ) ; return 0 ; }
#include <stdio.h> void fun2 ( ) { signed char i ; for ( i = 0 ; i <128 ; i + + ) printf ( " %d " , i ) ; } int main ( ) { fun2 ( ) ; return 0 ; }
#include <stdio.h> void fun1 ( ) { unsigned char i = 0 ; do { printf ( " %d " , i ) ; i + + ; } while ( i > 0 ) ; } int main ( ) { fun1 ( ) ; return 0 ; }
#include <stdio.h> void fun2 ( ) { signed char i = 0 ; do { printf ( " %d " , i ) ; i + + ; } while ( i > 0 ) ; } int main ( ) { fun2 ( ) ; return 0 ; }
#include <iostream> int foo ( ) { return 10 ; } char foo ( ) { return 'a' ; } int main ( ) { char x = foo ( ) ; getchar ( ) ; return 0 ; }
#include <iostream> class Test { static void fun ( int i ) { } void fun ( int i ) { } } ; int main ( ) { Test t ; getchar ( ) ; return 0 ; }
#include <iostream> #include <stdio.h> using namespace std ; int f ( int x ) { return x + 10 ; } int f ( const int x ) { return x + 10 ; } int main ( ) { getchar ( ) ; return 0 ; }
#include <iostream> #include <string> int main ( ) { std : : string x ; x = " 20 " ; float y = std : : stof ( x ) + 2.5 ; std : : cout < < y ; return 0 ; }
#include <iostream> #include <string> int main ( ) { std : : string str = " 5000.5 " ; float x = std : : stof ( str ) ; std : : cout < < x ; return 0 ; }
#include <iostream> #include <string> int main ( ) { std : : string str = " 500087 " ; long double x = std : : stold ( str ) ; std : : cout < < x ; return 0 ; }
#include <iostream> #include <string> int main ( ) { std : : string x ; x = " 2075 " ; long double y = std : : stof ( x ) + 2.5 ; std : : cout < < y ; return 0 ; }
#include <stdio.h> int main ( ) { int i = 0 ; for ( i = 1 ; i < = 10 ; i + + ) { printf ( " Hello World\n  " ) ; } return 0 ; }
#include <iostream> using namespace std ; int main ( ) { for ( int i = 1 ; i < = 10 ; i + + ) { cout < < " Hello World\n  " ; } return 0 ; }
#include <stdio.h> int main ( ) { int i = 1 ; while ( i < 6 ) { printf ( " Hello World\n  " ) ; i + + ; } return 0 ; }
#include <iostream> using namespace std ; int main ( ) { int i = 1 ; while ( i < 6 ) { cout < < " Hello World\n  " ; i + + ; } return 0 ; }
#include <stdio.h> int main ( ) { int i = 2 ; do { printf ( " Hello World\n  " ) ; i + + ; } while ( i < 1 ) ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { int i = 2 ; do { cout < < " Hello World\n  " ; i + + ; } while ( i < 1 ) ; return 0 ; }
#include <stdio.h> int main ( ) { int i ; for ( ; ; ) { printf ( " This loop will run forever.\n  " ) ; } }
#include <iostream> using namespace std ; int main ( ) { int i ; for ( ; ; ) { cout < < " This loop will run forever.\n  " ; } }
#include <iostream> #define gfg 7 #if gfg > 200 #undef gfg #define gfg 200 #elif gfg < 50 #undef gfg #define gfg 50 #else #undef gfg #define gfg 100 #endif int main ( ) { std : : cout < < gfg ; }
#include <stdio.h> int main ( ) { double x = 1.2 ; int sum = ( int ) x + 1 ; printf ( " sum = %d " , sum ) ; return 0 ; }
#include <stdio.h> int main ( void ) { printf ( " Hello Geeks\b\b\b\bF " ) ; return ( 0 ) ; }
#include <iostream> using namespace std ; class Enclosing { private : int x ; class Nested { int y ; void NestedFun ( Enclosing * e ) { cout < <e-> x ; } } ; } ; int main ( ) { }
#include <iostream> using namespace std ; class Enclosing { int x ; class Nested { int y ; } ; void EnclosingFun ( Nested * n ) { cout < <n-> y ; } } ; int main ( ) { }
#include <iostream> using namespace std ; int & fun ; ( ) { static int x = 10 ; return x ; } int main ( ) { fun ( ) = 30 ; cout < < fun ( ) ; return 0 ; }
#include <iostream> using namespace std ; int fun ( int & x ; ) { return x ; } int main ( ) { cout < < fun ( 10 ) ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { int x = 10 ; int * ptr = & x ; int & * ptr1 = ptr ; }
#include <iostream> using namespace std ; int main ( ) { int * ptr = NULL ; int & ref ; = * ptr ; cout < < ref ; }
#include <iostream> using namespace std ; int & fun ; ( ) { int x = 10 ; return x ; } int main ( ) { fun ( ) = 30 ; cout < < fun ( ) ; return 0 ; }
#include <iostream> using namespace std ; class Base { public : virtual int fun ( int i ) { } } ; class Derived : public Base { private : int fun ( int x ) { } } ; int main ( ) { }
#include <iostream> using namespace std ; int main ( ) { try { throw 'a' ; } catch ( int x ) { cout < < " Caught " ; } return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Size = %lu " , sizeof ( size_t ) ) ; }
#include <iostream> #include <cctype> using namespace std ; int main ( ) { char x ; cin > > x ; if ( isupper ( x ) ) cout < < " Uppercase " ; else cout < < " Not uppercase. " ; return 0 ; }
#include <iostream> #include <cctype> using namespace std ; int main ( ) { char x ; cin > > x ; if ( islower ( x ) ) cout < < " Lowercase " ; else cout < < " Not Lowercase. " ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { char * str = " Hello " ; const char * str1 = " Hello " ; str [ 1 ] = 'o' ; cout < < str < < endl ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { char str [ ] = " Hello " ; str [ 1 ] = 'o' ; cout < < str < < endl ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { char caname [ ] = " geeksforgeeks " ; cout < < caname < < endl ; wchar_t waname [ ] = L " geeksforgeeks " ; wcout < < waname < < endl ; return 0 ; }
#include <stdio.h> int main ( ) { int ch ; while ( ( ch = getchar ( ) ) ! = '1' ) putchar ( ch ) ; ungetc ( ch , stdin ) ; ch = getchar ( ) ; putchar ( ch ) ; return 0 ; }
#include <iostream> using namespace std ; class A { int x ; public : A ( ) { x = 0 ; } void fun ( ) { delete this ; cout < <x ; } } ;
#include <bits / stdc + + .h> int x = printf ( " Hello World " ) ; int main ( ) { }
#include <iostream> using namespace std ; class A { public : A ( ) { cout < < " Hello World " ; } } ; A obj ; int main ( ) { }
#include <stdio.h> void main ( ) { int a ; if ( a = = 2 ) a + + ; printf ( " value of a is " , a ) ; else printf ( " value of a is not equal to 2 " ) ; }
#include <stdio.h> void main ( ) { int a ; 10 = a ; }
#include <iostream> #include <vector> using namespace std ; int main ( ) { vector <int> myvector { 1 , 2 , 3 , 4 , 5 } ; myvector.push_back ( 6 ) ; for ( auto x : myvector ) cout < < x < < " " ; }
#include <stdio.h> int main ( ) { int x = 1987 ; printf ( " %d " , printf ( " %d " , printf ( " %d " , x ) ) ) ; return ( 0 ) ; }
#include <bits / stdc + + .h> using namespace std ; int main ( ) { int * array = new int [ 10 ] ; delete [ ] array ; return 0 ; }
#include <bits / stdc + + .h> using namespace std ; int main ( ) { int * ptr = NULL ; delete ptr ; return 0 ; }
#include <bits / stdc + + .h> using namespace std ; int main ( ) { void * ptr ; delete ptr ; cout < < " ptr deleted successfully " ; return 0 ; }
#include <bits / stdc + + .h> using namespace std ; int main ( ) { int * ptr2 = ( int * ) malloc ( sizeof ( int ) ) ; delete ptr2 ; cout < < " ptr2 deleted successfully " ; return 0 ; }
#include <bits / stdc + + .h> using namespace std ; int main ( ) { int x ; delete x ; return 0 ; }
#include <bits / stdc + + .h> using namespace std ; int main ( ) { int x ; int * ptr1 = & x ; delete ptr1 ; return 0 ; }
#include <iostream> using namespace std ; void fun ( ) { cout < < " Hello " ; return ; } int main ( ) { fun ( ) ; return 0 ; }
#include <iostream> using namespace std ; void test ( ) { cout < < " Hello " ; return ( void ) " Doesn't Print " ; } int main ( ) { test ( ) ; return 0 ; }
#include <iostream> #include " Header1.h " #include " Header2.h " using namespace std ; using namespace one ; using namespace two ; int main ( ) { print ( ) ; }
#include <iostream> #include " Header1.h " #include " Header2.h " int main ( ) { one : : print ( ) ; two : : print ( ) ; }
#include <iostream> using namespace std ; int main ( ) { int num ; cout < < " Enter the integer : " ; cin > > num ; cout < < " Entered integer is : " < < num ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { char sample [ ] = " GeeksforGeeks " ; cout < < sample < < " - A computer science portal for geeks " ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { int age ; cout < < " Enter your age : " ; cin > > age ; cout < < " \n Your age is : " < <age ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { cerr < < " An error occured " ; return 0 ; }
#include <iostream> using namespace std ; int main ( ) { clog < < " An error occured " ; return 0 ; }
#include <iostream> class Test { public : virtual ~Test ( ) = 0 ; } ; Test : : ~Test ( ) { } int main ( ) { Test p ; Test * t1 = new Test ; return 0 ; }
#include <iostream> using namespace std ; void func ( ) { int age = 18 ; } int main ( ) { cout < < " Age is : " < <age ; return 0 ; }
#include <iostream> using namespace std ; void func ( ) { int age = 18 ; cout < <age ; } int main ( ) { cout < < " Age is : " ; func ( ) ; return 0 ; }
#include <iostream> using namespace std ; int global = 5 ; void display ( ) { cout < <global < <endl ; } int main ( ) { display ( ) ; global = 10 ; display ( ) ; }
#include <iostream> using namespace std ; int global = 5 ; int main ( ) { int global = 2 ; cout < < global < < endl ; }
#include <graphics.h> int main ( ) { int gd = DETECT , gm ; initgraph ( & gd ; , & gm ; , " " ) ; lineto ( 250 , 100 ) ; getch ( ) ; closegraph ( ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " This is output from my first program!\n  " ) ; return 0 ; }
#include <stdio.h> int main ( ) { int a , b , c ; a = 5 ; b = 7 ; c = a + b ; printf ( " %d + %d = %d\n  " , a , b , c ) ; return 0 ; }
#include <stdio.h> void main ( ) { printf ( " %d\n  " , add ( 3 ) ) ; } int add ( int i , int j ) { return i + j ; }
#include <stdio.h> int add ( int , int ) ; void main ( ) { printf ( " %d\n  " , add ( 3 ) ) ; } int add ( int i , int j ) { return i + j ; }
#include <stdio.h> void main ( ) { printf ( " %d\n  " , add ( 3 ) ) ; } float add ( int i , int j ) { return i + j ; }
#include <stdio.h> #include <string.h> void main ( ) { char s [ 1000 ] ; int count = 0 ; while ( gets ( s ) ) count + = strlen ( s ) ; printf ( " %d\n  " , count ) ; }
#include <stdio.h> void main ( ) { int * p ; printf ( " %d\n  " , * p ) ; }
#include <stdio.h> int main ( ) { int i ; int * p ; p = & i ; * p = 5 ; printf ( " %d %d\n  " , i , * p ) ; return 0 ; }
#include <stdio.h> int main ( ) { int * p ; p = ( int * ) malloc ( sizeof ( int ) ) ; * p = 10 ; printf ( " %d\n  " , * p ) ; free ( p ) ; return 0 ; }
#include <string.h> int main ( ) { char s1 [ 100 ] , s2 [ 100 ] ; strcpy ( s1 , " hello " ) ; strcpy ( s2 , s1 ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Hello World! " ) ; return 0 ; }
#include <stdio.h> void printMessage ( void ) { printf ( " Hello World! " ) ; } int main ( ) { printMessage ( ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Hello world\n  " ) ; return 0 ; }
#include <stdio.h> int main ( ) { while ( 1 )
#include <stdio.h> int main ( ) { int a ; printf ( " Enter an integer\n  " ) ; scanf ( " %d " , & a ) ; printf ( " The integer is %d\n  " , a ) ; return 0 ; }
#include <stdio.h> int main ( ) { int c ; for ( c = 1 ; c < = 100 ; c + + ) printf ( " %d " , c ) ; return 0 ; }
#include <stdio.h> int main ( ) { char n [ 1000 ] ; printf ( " Input an integer\n  " ) ; scanf ( " %s " , n ) ; printf ( " %s " , n ) ; return 0 ; }
#include <stdio.h> main ( ) { int a = 1 , b = 2 ; a = a + b ; printf ( " Sum of a and b = %d\n  " , a ) ; return 0 ; }
#include <stdio.h> int main ( ) { char ch ; printf ( " Enter a character\n  " ) ; scanf ( " %c " , & ch ) ;
#include <stdio.h> int main ( ) { int year ; printf ( " Enter a year to check if it is a leap year\n  " ) ; scanf ( " %d " , & year ) ; if ( year %400 = = 0 )
#include <stdio.h> void swap ( int * , int * ) ;
#include <stdio.h> int main ( ) { char z [ 100 ] = " I am learning C programming language. " ; printf ( " %s " , z ) ;
#include <stdio.h> int main ( ) { char array [ 100 ] ; printf ( " Enter a string\n  " ) ; scanf ( " %s " , array ) ; printf ( " Your string : %s\n  " , array ) ; return 0 ; }
#include <stdio.h> int main ( ) { char z [ 100 ] ; printf ( " Enter a string\n  " ) ; gets ( z ) ; printf ( " The string : %s\n  " , z ) ; return 0 ; }
#include <stdio.h> int main ( ) { char s [ 1000 ] , r [ 1000 ] ; int begin , end , count = 0 ; printf ( " Input a string\n  " ) ; gets ( s ) ;
#include <stdio.h> #include <string.h> int main ( ) { char a [ 100 ] , b [ 100 ] ; printf ( " Enter a string to check if it is a palindrome\n  " ) ; gets ( a ) ; strcpy ( b , a ) ;
#include <stdio.h> #include <conio.h> #include <dos.h> int main ( ) { struct date d ; getdate ( & d ) ; printf ( " Current system date : %d / %d / %d " , d.da_day , d.da_mon , d.da_year ) ; getch ( ) ; return 0 ; }
#include <stdlib.h> int main ( ) { system ( " C : \\Windows\\System32\\ipconfig " ) ; return 0 ; }
#include <stdio.h> #include <stdlib.h> int main ( ) { system ( " C : \\WINDOWS\\System32\\shutdown / s " ) ; return 0 ; }
#include <stdio.h> int main ( ) { system ( " shutdown -P now " ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Hello World\n  " ) ; return 0 ; }
#include <stdio.h> int main ( ) { int x ; printf ( " Input an integer\n  " ) ; scanf ( " %d " , & x ) ;
#include <stdio.h> int main ( ) { int c = 1 ;
#include <stdio.h> #include <string.h> struct game { char game_name [ 50 ] ; int number_of_players ; } ;
#include <stdio.h> #include <conio.h> int main ( ) { int c ; for ( c = 1 ; c < = 10 ; c + + ) printf ( " %d\n  " , c ) ; getch ( ) ; return 0 ; }
#include <stdio.h> int main ( ) { int c ; for ( c = 1 ; c < = 10 ; c + + ) printf ( " %d\n  " , c ) ; return 0 ; }
#include <graphics.h> #include <conio.h> int main ( ) { int gd = DETECT , gm ; initgraph ( & gd , & gm , " C : \\TC\\BGI " ) ; getch ( ) ; closegraph ( ) ; return 0 ; }
#include <stdio.h> int main ( ) { int n , c = 1 ; scanf ( " %d " , & n ) ;
#include <stdio.h> #include <conio.h> main ( ) { printf ( " This line will be deleted when you press a key. " ) ; getch ( ) ; delline ( ) ; printf ( " Line deleted successfully. " ) ; getch ( ) ; return 0 ; }
#include <stdio.h> #include <conio.h> main ( ) { printf ( " Waiting for a character to be pressed from the keyboard to exit.\n  " ) ; getch ( ) ; return 0 ; }
#include <iostream.h> #include <conio.h> main ( ) { cout < < " Enter a character " ; getch ( ) ; }
#include <stdio.h> main ( ) { int c ; c = getchar ( ) ; putchar ( c ) ; return 0 ; }
#include <stdio.h> #include <conio.h> main ( ) { printf ( " Waiting for a character to be pressed from the keyboard to exit. " ) ; getche ( ) ; return 0 ; }
#include <stdio.h> #include <conio.h> main ( ) { while ( !kbhit ( ) ) printf ( " You haven't pressed a key.\n  " ) ; return 0 ; } eval ( ez_write_tag ( [ [ 728 , 90 ] , 'programmingsimplified_com-box-3' , 'ezslot_1' ] ) ) ;
#include <stdio.h> #include <conio.h> main ( ) { textcolor ( RED ) ; cprintf ( " C programming " ) ; getch ( ) ; return 0 ; }
#include <stdio.h> #include <conio.h> main ( ) { textcolor ( MAGENTA + BLINK ) ; cprintf ( " C programming " ) ; getch ( ) ; return 0 ; }
#include <stdio.h> #include <math.h> int main ( ) { double result , x = 1.0471 ; result = cos ( x ) ; printf ( " cos ( %.4lf ) = %.2lf\n  " , x , result ) ; return 0 ; }
#include <stdio.h> #include <math.h> int main ( ) { double result , x = M_PI / 6 ; result = sin ( x ) ; printf ( " The sin ( %lf ) = %.2lf\n  " , x , result ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Hello World! " ) ; return 0 ; }
#include <stdio.h> int main ( ) { char c ; c = 'A' ; printf ( " value of c is %c " , c ) ; return 0 ; }
#include <stdio.h> int main ( ) { int i ; i = 123 ; printf ( " value of i is %d " , i ) ; return 0 ; }
#include <stdio.h> int main ( ) { float f ; f = 12.001234 ; printf ( " value of f is %f " , f ) ; return 0 ; }
#include <stdio.h> int main ( ) { double d ; d = 12.001234 ; printf ( " value of d is %e " , d ) ; return 0 ; }
#include <stdio.h> int main ( ) { int op1 , op2 , sum ; op1 = 5 ; op2 = 3 ; sum = op1 + op2 ; printf ( " sum of %d and %d is %d " , op1 , op2 , sum ) ; }
#include <stdio.h> int main ( ) { int op1 , op2 , sub ; op1 = 5 ; op2 = 3 ; sub = op1 - op2 ; printf ( " Output of %d − %d is %d " , op1 , op2 , sub ) ; }
#include <stdio.h> int main ( ) { int op1 , op2 , mul ; op1 = 5 ; op2 = 3 ; mul = op1 * op2 ; printf ( " Output of %d multiplied by %d is %d " , op1 , op2 , mul ) ; }
#include <stdio.h> int main ( ) { int op1 , op2 , div ; op1 = 6 ; op2 = 3 ; div = 6 / 3 ; printf ( " Output of %d divide by %d is %d " , op1 , op2 , div ) ; }
#include <stdio.h> int main ( ) { int number = -2 ; if ( number > = 0 ) printf ( " %d is positive\n  " , number ) ; else printf ( " %d is negative\n  " , number ) ; return 0 ; }
#include <stdio.h> int main ( ) { int i , start , end ; start = 1 ; end = 10 ; for ( i = end ; i > = start ; i-- ) printf ( " %2d\n  " , i ) ; return 0 ; }
#include <stdio.h> int main ( ) { int i ; for ( i = 1 ; i < = 10 ; i + + ) { if ( i %2 = = 0 ) printf ( " %2d\n  " , i ) ; } return 0 ; }
#include <stdio.h> int main ( ) { int i ; for ( i = 1 ; i < = 10 ; i + + ) { if ( i %2 ! = 0 ) printf ( " %d\n  " , i ) ; } return 0 ; }
#include <stdio.h> int main ( ) { char str [ ] = " Hello World " ; printf ( " %s\n  " , str ) ; return 0 ; }
#include <stdio.h> int main ( ) { float percentage ; int total_marks = 1200 ; int scored = 1122 ; percentage = ( float ) scored / total_marks * 100.0 ; printf ( " Percentage = %.2f % % " , percentage ) ; return 0 ; }
#include <stdio.h> int main ( ) { int n = 5 ; printf ( " Cube of %d = %d " , n , ( n * n * n ) ) ; return 0 ; }
#include int main ( ) { printf ( " Hello C Programming\n  " ) ; return 0 ; }
#include int main ( ) { printf ( " Hello C Programming\n  " ) ; return 0 ; }
#include int main ( ) { printf ( " Hello C Language " ) ; return 0 ; }
#include int main ( ) { printf ( " Hello C Language " ) ; return 0 ; }
#include " myfile.h " #include void printValue ( ) { printf ( " Global variable : %d " , global_variable ) ; }
#include int main ( ) { printf ( " Hello C " ) ; return 0 ; }
#include int main ( ) { printf ( " Hello C " ) ; return 0 ; }
#include int main ( ) { int number = 50 ; printf ( " You\n are\n learning\n \'c\' language\n \ " Do you know C language\ " " ) ; return 0 ; }
#include int main ( ) { const float PI = 3.14 ; printf ( " The value of PI is : %f " , PI ) ; return 0 ; }
#include int main ( ) { const float PI = 3.14 ; PI = 4.5 ; printf ( " The value of PI is : %f " , PI ) ; return 0 ; }
#include int main ( ) { int i = 1 ; do { printf ( " %d \n  " , i ) ; i + + ; } while ( i < = 10 ) ; return 0 ; }
#include int main ( ) { int i = 1 ; while ( i < = 10 ) { printf ( " %d \n  " , i ) ; i + + ; } return 0 ; }
#include <stdio.h> void main ( ) { int j = 1 ; while ( j + = 2 , j < = 10 ) { printf ( " %d " , j ) ; } printf ( " %d " , j ) ; }
#include <stdio.h> void main ( ) { while ( ) { printf ( " hello Javatpoint " ) ; } }
#include <stdio.h> void main ( ) { int x = 10 , y = 2 ; while ( x + y-1 ) { printf ( " %d %d " , x-- , y-- ) ; } }
#include int main ( ) { int i = 0 ; for ( i = 1 ; i < = 10 ; i + + ) { printf ( " %d \n  " , i ) ; } return 0 ; }
#include <stdio.h> int main ( ) { int i = 1 ; for ( ; i <5 ; i + + ) { printf ( " %d " , i ) ; } }
#include <stdio.h> int main ( ) { int i ; for ( i = 0 ; i < = 4 ; i + + ) { printf ( " %d " , i ) ; } }
#include <stdio.h> int main ( ) { int i ; for ( i = 0 ; ; i + + ) { printf ( " %d " , i ) ; } }
#include <stdio.h> void main ( ) { int i ; for ( i = 0 ; i <10 ; i + + ) { int i = 20 ; printf ( " %d " , i ) ; } }
#include <stdio.h> void main ( ) { for ( ; ; ) { printf ( " welcome to javatpoint " ) ; } }
#include <stdio.h> void main ( ) { int i = 0 ; while ( i! = 10 ) { printf ( " %d " , i ) ; continue ; i + + ; } }
#include int main ( ) { float f = ( float ) 9 / 4 ; printf ( " f : %f\n  " , f ) ; return 0 ; }
#include int main ( ) { int x ; for ( x = -1 ; x < = 10 ; x + + ) { if ( x < 5 ) continue ; else break ; printf ( " javaTpoint " ) ; } return 0 ; }
#include int main ( ) { int i = 1 ; while ( i < = 155 ) { printf ( " %c %d\n  " , i , i ) ; i + + ; } return 0 ; }
#include int main ( ) { int i = 8 , j = 24 ; if ( i = 8 ) & & if ( j = 24 ) printf ( " Welcome Programmer " ) ; return 0 ; }
#include <stdio.h> void printName ( ) ; void main ( ) { printf ( " Hello " ) ; printName ( ) ; } void printName ( ) { printf ( " Javatpoint " ) ; }
#include <stdio.h> int main ( ) { int a ; char b ; float c ; printf ( " %d %c %f " , a , b , c ) ; return 0 ; }
#include <stdio.h> static char c ; static int i ; static float f ; static char s [ 100 ] ; void main ( ) { printf ( " %d %d %f %s " , c , i , f ) ; }
#include <stdio.h> int main ( ) { register int a ; printf ( " %d " , a ) ; }
#include <stdio.h> int main ( ) { register int a = 0 ; printf ( " %u " , & a ; ) ; }
#include <stdio.h> int main ( ) { extern int a ; printf ( " %d " , a ) ; }
#include int a ; int main ( ) { extern int a ; printf ( " %d " , a ) ; }
#include int a ; int main ( ) { extern int a = 0 ; printf ( " %d " , a ) ; }
#include int main ( ) { extern int a ; printf ( " %d " , a ) ; } int a = 20 ;
#include main ( ) { char x [ ] = " javaTpoint " , y [ ] = " javaTpoint " ; if ( x = = y ) { printf ( " Strings are Equal " ) ; } }
#include main ( ) { char x [ ] = " Hi\0Hello " ; printf ( " %d %d " , strlen ( x ) , sizeof ( x ) ) ; }
#include int main ( ) { int number = 50 ; printf ( " value of number is %d , address of number is %u " , number , & number ) ; return 0 ; }
#include <stdio.h> void main ( ) { char s [ 20 ] ; printf ( " Enter the string? " ) ; scanf ( " %s " , s ) ; printf ( " You entered %s " , s ) ; }
#include void main ( ) { char s [ 20 ] ; printf ( " Enter the string? " ) ; scanf ( " % [ ^\n  ] s " , s ) ; printf ( " You entered %s " , s ) ; }
#include <stdio.h> void main ( ) { char s [ 11 ] = " javatpoint " ; char * p = s ; printf ( " %s " , p ) ; }
#include <stdio.h> void main ( ) { char * p = " hello javatpoint " ; printf ( " Before assigning : %s\n  " , p ) ; p = " hello " ; printf ( " After assigning : %s\n  " , p ) ; }
#include void main ( ) { char s [ 30 ] ; printf ( " Enter the string? " ) ; gets ( s ) ; printf ( " You entered %s " , s ) ; }
#include void main ( ) { char str [ 20 ] ; printf ( " Enter the string? " ) ; fgets ( str , 20 , stdin ) ; printf ( " %s " , str ) ; }
#include #include int main ( ) { char name [ 50 ] ; printf ( " Enter your name : " ) ; gets ( name ) ; printf ( " Your name is : " ) ; puts ( name ) ; return 0 ; }
#include int main ( ) { char a [ ] = " %d\n  " ; a [ 1 ] = 'b' ; printf ( a , 65 ) ; return 0 ; }
#include main ( ) { union abc { int a ; char cha ; } var ; var.cha = 'A' ; printf ( " %d " , var.a ) ; }
#include main ( ) { FILE * fp ; fp = fopen ( " file.txt " , " w " ) ; fprintf ( fp , " Hello file by fprintf...\n  " ) ; fclose ( fp ) ; }
#include main ( ) { FILE * fp ; fp = fopen ( " file1.txt " , " w " ) ; fputc ( 'a' , fp ) ; fclose ( fp ) ; }
#include #include void main ( ) { FILE * fp ; clrscr ( ) ; fp = fopen ( " myfile2.txt " , " w " ) ; fputs ( " hello c programming " , fp ) ; fclose ( fp ) ; getch ( ) ; }
#include int main ( ) { printf ( " Hello C " ) ; return 0 ; }
#include #define PI 3.14 main ( ) { printf ( " %f " , PI ) ; }
#include #define PI 3.14 #undef PI main ( ) { printf ( " %f " , PI ) ; }
#include #define number 15 int square = number * number ; #undef number main ( ) { printf ( " %d " , square ) ; }
#include #include #define NUMBER 0 void main ( ) { #if ( NUMBER = = 0 ) printf ( " Value of Number is : %d " , NUMBER ) ; #endif getch ( ) ; }
#include #include #define NUMBER 1 void main ( ) { #if NUMBER = = 0 printf ( " Value of Number is : %d " , NUMBER ) ; #else print ( " Value of Number is non-zero " ) ; #endif getch ( ) ; }
#include #ifndef __MATH_H #error First include then compile #else void main ( ) { float a ; a = sqrt ( 7 ) ; printf ( " %f " , a ) ; } #endif
#include #include #ifndef __MATH_H #error First include then compile #else void main ( ) { float a ; a = sqrt ( 7 ) ; printf ( " %f " , a ) ; } #endif
#include int main ( ) { if ( printf ( " hello world " ) ) { } return 0 ; }
#include int main ( ) { switch ( printf ( " hello world " ) ) { } return 0 ; }
#include int main ( ) { while ( !printf ( " hello world " ) ) { } return 0 ; }
#include <stdio.h> void main ( ) { int a = 10 , b = 20 , c ; asm { mov ax , a mov bx , b add ax , bx mov c , ax } printf ( " c = %d " , c ) ; }
#include #define start main void start ( ) { printf ( " Hello " ) ; }
#include <stdio.h> int main ( ) { int * p ; int a = 5 ; p = & a ; printf ( " Address value of 'a' variable is %u " , p ) ; return 0 ; }
#include <stdio.h> void main ( ) { int * ptr = malloc ( constant value ) ; free ( ptr ) ; }
#include <stdio.h> void main ( ) { int * ptr = malloc ( constant value ) ; free ( ptr ) ; ptr = NULL ; }
#include <stdio.h> int main ( ) { char a [ 20 ] ; int n = sprintf ( a , " javaToint " ) ; printf ( " value of n is %d " , n ) ; return 0 ; }
#include #define start main void start ( ) { printf ( " Hello " ) ; }
#include <stdio.h> void main ( ) { if ( printf ( " hello world " ) ) { } }
#include int main ( ) { printf ( " Hello C Programming\n  " ) ; return 0 ; }
#include int main ( ) { printf ( " Hello C Language " ) ; return 0 ; }
#include int main ( ) { printf ( " Hello C Language " ) ; return 0 ; }
#include " myfile.h " #include void printValue ( ) { printf ( " Global variable : %d " , global_variable ) ; }
#include int main ( ) { printf ( " Hello C " ) ; return 0 ; }
#include int main ( ) { printf ( " Hello C " ) ; return 0 ; }
#include int main ( ) { int number = 50 ; printf ( " You\n are\n learning\n \'c\' language\n \ " Do you know C language\ " " ) ; return 0 ; }
#include int main ( ) { const float PI = 3.14 ; printf ( " The value of PI is : %f " , PI ) ; return 0 ; }
#include int main ( ) { const float PI = 3.14 ; PI = 4.5 ; printf ( " The value of PI is : %f " , PI ) ; return 0 ; }
#include int main ( ) { int i = 1 ; do { printf ( " %d \n  " , i ) ; i + + ; } while ( i < = 10 ) ; return 0 ; }
#include int main ( ) { int i = 1 ; while ( i < = 10 ) { printf ( " %d \n  " , i ) ; i + + ; } return 0 ; }
#include <stdio.h> void main ( ) { int j = 1 ; while ( j + = 2 , j < = 10 ) { printf ( " %d " , j ) ; } printf ( " %d " , j ) ; }
#include <stdio.h> void main ( ) { while ( ) { printf ( " hello Javatpoint " ) ; } }
#include <stdio.h> void main ( ) { int x = 10 , y = 2 ; while ( x + y-1 ) { printf ( " %d %d " , x-- , y-- ) ; } }
#include int main ( ) { int i = 0 ; for ( i = 1 ; i < = 10 ; i + + ) { printf ( " %d \n  " , i ) ; } return 0 ; }
#include <stdio.h> int main ( ) { int i = 1 ; for ( ; i <5 ; i + + ) { printf ( " %d " , i ) ; } }
#include <stdio.h> int main ( ) { int i ; for ( i = 0 ; i < = 4 ; i + + ) { printf ( " %d " , i ) ; } }
#include <stdio.h> int main ( ) { int i ; for ( i = 0 ; ; i + + ) { printf ( " %d " , i ) ; } }
#include <stdio.h> void main ( ) { int i ; for ( i = 0 ; i <10 ; i + + ) { int i = 20 ; printf ( " %d " , i ) ; } }
#include <stdio.h> void main ( ) { for ( ; ; ) { printf ( " welcome to javatpoint " ) ; } }
#include <stdio.h> void main ( ) { int i = 0 ; while ( i! = 10 ) { printf ( " %d " , i ) ; continue ; i + + ; } }
#include int main ( ) { float f = ( float ) 9 / 4 ; printf ( " f : %f\n  " , f ) ; return 0 ; }
#include int main ( ) { int x ; for ( x = -1 ; x < = 10 ; x + + ) { if ( x < 5 ) continue ; else break ; printf ( " javaTpoint " ) ; } return 0 ; }
#include int main ( ) { int i = 1 ; while ( i < = 155 ) { printf ( " %c %d\n  " , i , i ) ; i + + ; } return 0 ; }
#include int main ( ) { int i = 8 , j = 24 ; if ( i = 8 ) & & if ( j = 24 ) printf ( " Welcome Programmer " ) ; return 0 ; }
#include <stdio.h> void printName ( ) ; void main ( ) { printf ( " Hello " ) ; printName ( ) ; } void printName ( ) { printf ( " Javatpoint " ) ; }
#include <stdio.h> int main ( ) { int a ; char b ; float c ; printf ( " %d %c %f " , a , b , c ) ; return 0 ; }
#include <stdio.h> static char c ; static int i ; static float f ; static char s [ 100 ] ; void main ( ) { printf ( " %d %d %f %s " , c , i , f ) ; }
#include <stdio.h> int main ( ) { register int a ; printf ( " %d " , a ) ; }
#include <stdio.h> int main ( ) { register int a = 0 ; printf ( " %u " , & a ; ) ; }
#include <stdio.h> int main ( ) { extern int a ; printf ( " %d " , a ) ; }
#include int a ; int main ( ) { extern int a ; printf ( " %d " , a ) ; }
#include int a ; int main ( ) { extern int a = 0 ; printf ( " %d " , a ) ; }
#include int main ( ) { extern int a ; printf ( " %d " , a ) ; } int a = 20 ;
#include main ( ) { char x [ ] = " javaTpoint " , y [ ] = " javaTpoint " ; if ( x = = y ) { printf ( " Strings are Equal " ) ; } }
#include main ( ) { char x [ ] = " Hi\0Hello " ; printf ( " %d %d " , strlen ( x ) , sizeof ( x ) ) ; }
#include int main ( ) { int number = 50 ; printf ( " value of number is %d , address of number is %u " , number , & number ) ; return 0 ; }
#include <stdio.h> void main ( ) { char s [ 20 ] ; printf ( " Enter the string? " ) ; scanf ( " %s " , s ) ; printf ( " You entered %s " , s ) ; }
#include void main ( ) { char s [ 20 ] ; printf ( " Enter the string? " ) ; scanf ( " % [ ^\n  ] s " , s ) ; printf ( " You entered %s " , s ) ; }
#include <stdio.h> void main ( ) { char s [ 11 ] = " javatpoint " ; char * p = s ; printf ( " %s " , p ) ; }
#include <stdio.h> void main ( ) { char * p = " hello javatpoint " ; printf ( " Before assigning : %s\n  " , p ) ; p = " hello " ; printf ( " After assigning : %s\n  " , p ) ; }
#include void main ( ) { char s [ 30 ] ; printf ( " Enter the string? " ) ; gets ( s ) ; printf ( " You entered %s " , s ) ; }
#include void main ( ) { char str [ 20 ] ; printf ( " Enter the string? " ) ; fgets ( str , 20 , stdin ) ; printf ( " %s " , str ) ; }
#include #include int main ( ) { char name [ 50 ] ; printf ( " Enter your name : " ) ; gets ( name ) ; printf ( " Your name is : " ) ; puts ( name ) ; return 0 ; }
#include int main ( ) { char a [ ] = " %d\n  " ; a [ 1 ] = 'b' ; printf ( a , 65 ) ; return 0 ; }
#include main ( ) { union abc { int a ; char cha ; } var ; var.cha = 'A' ; printf ( " %d " , var.a ) ; }
#include main ( ) { FILE * fp ; fp = fopen ( " file.txt " , " w " ) ; fprintf ( fp , " Hello file by fprintf...\n  " ) ; fclose ( fp ) ; }
#include main ( ) { FILE * fp ; fp = fopen ( " file1.txt " , " w " ) ; fputc ( 'a' , fp ) ; fclose ( fp ) ; }
#include #include void main ( ) { FILE * fp ; clrscr ( ) ; fp = fopen ( " myfile2.txt " , " w " ) ; fputs ( " hello c programming " , fp ) ; fclose ( fp ) ; getch ( ) ; }
#include int main ( ) { printf ( " Hello C " ) ; return 0 ; }
#include #define PI 3.14 main ( ) { printf ( " %f " , PI ) ; }
#include #define PI 3.14 #undef PI main ( ) { printf ( " %f " , PI ) ; }
#include #define number 15 int square = number * number ; #undef number main ( ) { printf ( " %d " , square ) ; }
#include #include #define NUMBER 0 void main ( ) { #if ( NUMBER = = 0 ) printf ( " Value of Number is : %d " , NUMBER ) ; #endif getch ( ) ; }
#include #include #define NUMBER 1 void main ( ) { #if NUMBER = = 0 printf ( " Value of Number is : %d " , NUMBER ) ; #else print ( " Value of Number is non-zero " ) ; #endif getch ( ) ; }
#include #ifndef __MATH_H #error First include then compile #else void main ( ) { float a ; a = sqrt ( 7 ) ; printf ( " %f " , a ) ; } #endif
#include #include #ifndef __MATH_H #error First include then compile #else void main ( ) { float a ; a = sqrt ( 7 ) ; printf ( " %f " , a ) ; } #endif
#include int main ( ) { if ( printf ( " hello world " ) ) { } return 0 ; }
#include int main ( ) { switch ( printf ( " hello world " ) ) { } return 0 ; }
#include int main ( ) { while ( !printf ( " hello world " ) ) { } return 0 ; }
#include <stdio.h> void main ( ) { int a = 10 , b = 20 , c ; asm { mov ax , a mov bx , b add ax , bx mov c , ax } printf ( " c = %d " , c ) ; }
#include #define start main void start ( ) { printf ( " Hello " ) ; }
#include int main ( ) { int x ; for ( x = -1 ; x < = 10 ; x + + ) { if ( x < 5 ) continue ; else break ; printf ( " javaTpoint " ) ; } return 0 ; }
#include int main ( ) { int i = 1 ; while ( i < = 155 ) { printf ( " %c %d\n  " , i , i ) ; i + + ; } return 0 ; }
#include int main ( ) { int i = 8 , j = 24 ; if ( i = 8 ) & & if ( j = 24 ) printf ( " Welcome Programmer " ) ; return 0 ; }
#include int main ( ) { int j = 1 ; while ( ) { printf ( " %d\n  " , j + + ) ; if ( j> 5 ) break ; } return 0 ; }
#include main ( ) float a = 3.14 ; double b = 3.14 ;
#include int main ( ) { int i = 1 ; switch ( i ) { case 1 : printf ( " Case1 " ) ; break ; case 1 * 2 + 2 : printf ( " Case2 " ) ; break ; } return 0 ; }
#include int main ( ) { short int i = 0 ; for ( i < = 5 & & i> = -1 ; + + i ; i> 0 ) printf ( " %u , " , i ) ; return 0 ; }
#include int main ( ) { int a = 5 ; do { printf ( " %d\n  " , a ) ; a = -1 ; } while ( a> 0 ) ; return 0 ; }
#include int main ( ) { int b = 15 ; void f1 ( ) ; b = f1 ( ) ; printf ( " %d\n  " , b ) ; return 0 ; } void f1 ( ) { printf ( " Hello " ) ; }
#include int main ( ) { printf ( " %p\n  " , main ( ) ) ; return 0 ; }
#include main ( ) { char x [ ] = " javaTpoint " , y [ ] = " javaTpoint " ; if ( x = = y ) { printf ( " Strings are Equal " ) ; } }
#include main ( ) { char x [ ] = " Hi\0Hello " ; printf ( " %d %d " , strlen ( x ) , sizeof ( x ) ) ; }
#include main ( ) { int x [ ] = { 100 , 200 , 300 } ; printf ( " %d " , * x + 1 ) ; }
#include void main ( ) { char a [ ] = " C + + " ; printf ( " %s " , a ) ; a + + ; printf ( " %s " , a ) ; }
#include int main ( ) { int arr [ 2 ] = { 20 } ; printf ( " %d\n  " , 0 [ arr ] ) ; return 0 ; }
#include int main ( ) { int arr [ ] = { 10 , 11 , 12 , 15 , 23 } ; printf ( " %u , %u\n  " , arr , & arr ; ) ; return 0 ; }
#include int main ( ) { typedef char ( * ( * arrfptr [ 4 ] ) ( ) ) [ 20 ] ; arrfptr y ; return 0 ; }
#include main ( ) { struct { int y ; } var = { 4 } , * a = & var ; printf ( " %d %d %d " , var.y , a-> y , ( * a ) .y ) ; }
#include main ( ) { int a [ 3 ] = { 1 , , 2 } ; printf ( " %d " , a [ a [ 0 ] ] ) ; }
#include int main ( ) { int * i ; void fun ( int * * ) ; fun ( & i ; ) ; return 0 ; } void fun ( int * * j ) { int b = 10 ; }
#include int main ( ) { float j = 12 , * i ; void * a ; a = & j ; i = a ; printf ( " %f\n  " , * i ) ; return 0 ; }
#include main ( ) { int * a , * * b ; printf ( " %u\n  " , sizeof ( a ) ) ; printf ( " %u\n  " , sizeof ( b ) ) ; }
#include void main ( ) { char * a = " C + + " ; printf ( " %s " , a ) ; a + + ; printf ( " %s " , a ) ; }
#include main ( ) { char * x = NULL ; printf ( " %c " , * x ) ; }
#include int main ( ) { int b = 10 , * i ; void * p ; i = p = & b ; i + + ; p + + ; printf ( " %u %u\n  " , i , p ) ; return 0 ; }
#include int main ( ) { int j = 10 ; int * i = & j ; return 0 ; }
#include main ( ) { char * p = " Xyz " ; while ( * p ) printf ( " %c " , * p + + ) ; }
#include int main ( ) { char a [ ] = " %d\n  " ; a [ 1 ] = 'b' ; printf ( a , 65 ) ; return 0 ; }
#include #include int main ( ) { printf ( " %d\n  " , strlen ( " javaTpoint " ) ) ; return 0 ; }
#include #include int main ( ) { char stri [ ] = " Java\0\Tpoint\0 " ; printf ( " %s\n  " , stri ) ; return 0 ; }
#include main ( ) { char x [ ] = " Hi\0Hello " ; printf ( " %d %d " , strlen ( x ) , sizeof ( x ) ) ; }
#include #include int main ( ) { printf ( " %c\n  " , " javatpoint " [ 5 ] ) ; return 0 ; }
#include int main ( ) { printf ( " %u %s\n  " , & " Welcome " , & " Programming " ) ; return 0 ; }
#include main ( ) { union abc { int a ; char cha ; } var ; var.cha = 'A' ; printf ( " %d " , var.a ) ; }
#include main ( ) { enum { GREAT , is = 7 , india } ; printf ( " %d %d " , GREAT , india ) ; }
#include union xyz { char x , y , z , a , b , c , d , e ; int i ; } xyz ; main ( ) { printf ( " %d " , sizeof ( xyz ) ) ; }
#include main ( ) { struct { int y ; } var = { 4 } , * a = & var ; printf ( " %d %d %d " , var.y , a-> y , ( * a ) .y ) ; }
#include int main ( ) { struct values { int bit1 : 1 ; int bit3 : 3 ; int bit4 : 4 ; } bit ; printf ( " %d \n  " , sizeof ( bit ) ) ; return 0 ; }
#include #define DEF int main ( ) { int j = 3 ; #ifdef DEF printf ( " square of j = %d\n  " , j * j ) ; #else printf ( " j = %d\n  " , j ) ; #endif return 0 ; }
#include int main ( ) { int j ; #if A printf ( " Enter the number : " ) ; scanf ( " %d " , & j ; ) ; #elif B printf ( " The number is even " ) ; return 0 ; }
#include <stdio.h> int main ( ) { int * p ; int a = 5 ; p = & a ; printf ( " Address value of 'a' variable is %u " , p ) ; return 0 ; }
#include <stdio.h> void main ( ) { int * ptr = malloc ( constant value ) ; free ( ptr ) ; }
#include <stdio.h> void main ( ) { int * ptr = malloc ( constant value ) ; free ( ptr ) ; ptr = NULL ; }
#include <stdio.h> int main ( ) { char a [ 20 ] ; int n = sprintf ( a , " javaToint " ) ; printf ( " value of n is %d " , n ) ; return 0 ; }
#include #define start main void start ( ) { printf ( " Hello " ) ; }
#include <stdio.h> void main ( ) { if ( printf ( " hello world " ) ) { } }
#include <stdio.h> int main ( ) { int a = 10 ; int b = 20 ; int c = a + b ; printf ( " Sum = %d " , c ) ; return 0 ; }
#include <stdio.h> int main ( ) { int a = 10 ; int b = 20 ; int c = a + b ; printf ( " Sum = %d " , c ) ; return 0 ; }
#include <stdio.h> int main ( ) { char grade ; printf ( " Enter student grade : " ) ; grade = getchar ( ) ; putchar ( grade ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Hello , Codeforwin! " ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Hello , Codeforwin! " ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Hello , World! " ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Learn at Codeforwin! " ) ; return 0 ; }
#include <stdio.h> int main ( ) { int num1 = 10 ; int num2 = 20 ; int max = ( num1 > num2 ) ? num1 : num2 ; printf ( " Maximum is %d. " , max ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Hello , Codeforwin! " ) ; return 0 ; }
#include <stdio.h> int main ( ) { float radius , pi , area ; pi = 3.14159 ; radius = 12 ; area = pi * radius * radius ; printf ( " Area = %f " , area ) ; return 0 ; }
#include <stdio.h> int main ( ) { const float PI = 3.14159 ; float radius , area ; PI = 3.14 ; radius = 12 ; area = PI * radius * radius ; printf ( " Area = %f " , area ) ; return 0 ; }
#include <stdio.h> int main ( ) { char ch = 'A' ; int val = ch + 10 ; printf ( " val = %d " , val ) ; return 0 ; }
#include <stdio.h> int main ( ) { int count ; for ( count = 1 ; count < = 10 ; count + + ) { printf ( " %d " , count ) ; } return 0 ; }
#include <stdio.h> int main ( ) { int n = 1 ; while ( n < = 10 ) { printf ( " %d " , n ) ; n + + ; } return 0 ; }
#include <stdio.h> int main ( ) { int n = 1 ; do { printf ( " %d " , n ) ; n + + ; } while ( n < = 10 ) ; return 0 ; }
#include <stdio.h> extern int num1 , num2 ; int main ( ) { num1 = 10 ; num2 = 20 ; printf ( " num1 = %d , num2 = %d " , num1 , num2 ) ; return 0 ; }
#include <stdio.h> extern int num1 , num2 ; int main ( ) { num1 = 10 ; num2 = 20 ; printf ( " num1 = %d , num2 = %d " , num1 , num2 ) ; return 0 ; }
#include <stdio.h> int num ; void display ( ) { int i ; for ( i = 1 ; i < = num ; i + + ) { printf ( " num = %d\n  " , i ) ; } }
#include <stdio.h> #include " main.h " #include " win / display.c "
#include <stdio.h> #define PRINT ( msg ) #msg int main ( ) { printf ( PRINT ( C Programming in Codeforwin ) ) ; return 0 ; }
#include <stdio.h> #define CONCAT ( a , b ) a##b int main ( ) { printf ( " CONCAT ( 10 , 20 ) = %d\n  " , CONCAT ( 10 , 20 ) ) ; return 0 ; }
#include <stdio.h> int main ( ) { float radius , pi , area ; pi = 3.14159 ; radius = 12 ; area = pi * radius * radius ; printf ( " Area = %f " , area ) ; return 0 ; }
#include <stdio.h> int main ( ) { float radius , pi , area ; pi = 3.14159 ; radius = 12 ; area = pi * radius * radius ; printf ( " Area = %f " , area ) ; return 0 ; }
#include <stdio.h> int main ( ) { int a = 10 ; int b = 20 ; int c = a + b ; printf ( " Sum = %d " , c ) ; return 0 ; }
#include <stdio.h> int main ( ) { int a = 10 ; int b = 20 ; int c = a + b ; printf ( " Sum = %d " , c ) ; return 0 ; }
#include <stdio.h> int main ( ) { int a = 10 ; int b = 20 ; int c = a + b ; printf ( " Sum = %d " , c ) ; return 0 ; }
#include <stdio.h> int main ( ) { int a = 10 ; int b = 20 ; int c = a + b ; printf ( " Sum = %d " , c ) ; return 0 ; }
#include <stdio.h> int main ( ) { float radius , pi , area ; pi = 3.14159 ; radius = 12 ; area = pi * radius * radius ; printf ( " Area = %f " , area ) ; return 0 ; }
#include <stdio.h> int main ( ) { const float PI = 3.14159 ; float radius , area ; PI = 3.14 ; radius = 12 ; area = PI * radius * radius ; printf ( " Area = %f " , area ) ; return 0 ; }
#include <stdio.h> extern int num1 , num2 ; int main ( ) { num1 = 10 ; num2 = 20 ; printf ( " num1 = %d , num2 = %d " , num1 , num2 ) ; return 0 ; }
#include <stdio.h> extern int num1 , num2 ; int main ( ) { num1 = 10 ; num2 = 20 ; printf ( " num1 = %d , num2 = %d " , num1 , num2 ) ; return 0 ; }
#include <stdio.h> int main ( ) { int i ; for ( i = 0 ; i < = 255 ; i + + ) { printf ( " ASCII value of character %c = %d\n  " , i , i ) ; } return 0 ; }
#include <stdio.h> #include <stdlib.h> int main ( ) { char * ptr = malloc ( sizeof ( char ) * 20 ) ; return 0 ; }
#include <stdio.h> #include <stdlib.h> int main ( ) { char * ptr = malloc ( sizeof ( char ) * 20 ) ; free ( ptr ) ; return 0 ; }
#include <stdio.h> #define PRINT ( msg ) #msg int main ( ) { printf ( PRINT ( C Programming in Codeforwin ) ) ; return 0 ; }
#include <stdio.h> #define CONCAT ( a , b ) a##b int main ( ) { printf ( " CONCAT ( 10 , 20 ) = %d\n  " , CONCAT ( 10 , 20 ) ) ; return 0 ; }
#include <stdio.h> #include " main.h " #include " win / display.c "
#include <stdio.h> #include <stdlib.h> int main ( ) { char * ptr = malloc ( sizeof ( char ) * 20 ) ; return 0 ; }
#include <stdio.h> #include <stdlib.h> int main ( ) { char * ptr = malloc ( sizeof ( char ) * 20 ) ; free ( ptr ) ; return 0 ; }
#include <stdio.h> int main ( ) { char ch = 'A' ; int val = ch + 10 ; printf ( " val = %d " , val ) ; return 0 ; }
#include <stdio.h> int num ; void display ( ) { int i ; for ( i = 1 ; i < = num ; i + + ) { printf ( " num = %d\n  " , i ) ; } }
#include <stdio.h> extern int num1 , num2 ; int main ( ) { num1 = 10 ; num2 = 20 ; printf ( " num1 = %d , num2 = %d " , num1 , num2 ) ; return 0 ; }
#include <stdio.h> extern int num1 , num2 ; int main ( ) { num1 = 10 ; num2 = 20 ; printf ( " num1 = %d , num2 = %d " , num1 , num2 ) ; return 0 ; }
#include <stdio.h> int main ( ) { int n = 1 ; do { printf ( " %d " , n ) ; n + + ; } while ( n < = 10 ) ; return 0 ; }
#include <stdio.h> int main ( ) { int n = 1 ; while ( n < = 10 ) { printf ( " %d " , n ) ; n + + ; } return 0 ; }
#include <stdio.h> int main ( ) { int count ; for ( count = 1 ; count < = 10 ; count + + ) { printf ( " %d " , count ) ; } return 0 ; }
#include <stdio.h> int main ( ) { char grade ; printf ( " Enter student grade : " ) ; grade = getchar ( ) ; putchar ( grade ) ; return 0 ; }
#include <stdio.h> int main ( ) { char ch = 'A' ; int val = ch + 10 ; printf ( " val = %d " , val ) ; return 0 ; }
#include <stdio.h> int main ( ) { float radius , pi , area ; pi = 3.14159 ; radius = 12 ; area = pi * radius * radius ; printf ( " Area = %f " , area ) ; return 0 ; }
#include <stdio.h> int main ( ) { const float PI = 3.14159 ; float radius , area ; PI = 3.14 ; radius = 12 ; area = PI * radius * radius ; printf ( " Area = %f " , area ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Hello , Codeforwin! " ) ; return 0 ; }
#include <stdio.h> int main ( ) { int num1 = 10 ; int num2 = 20 ; int max = ( num1 > num2 ) ? num1 : num2 ; printf ( " Maximum is %d. " , max ) ; return 0 ; }
#include <stdio.h> int main ( ) { int a = 10 ; int b = 20 ; int c = a + b ; printf ( " Sum = %d " , c ) ; return 0 ; }
#include <stdio.h> int main ( ) { int a = 10 ; int b = 20 ; int c = a + b ; printf ( " Sum = %d " , c ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Learn at Codeforwin! " ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Hello , World! " ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Hello , Codeforwin! " ) ; return 0 ; }
#include <stdio.h> int main ( ) { printf ( " Hello , Codeforwin! " ) ; return 0 ; }
#include <stdio.h> int main ( ) { int i ; for ( i = 0 ; i < = 255 ; i + + ) { printf ( " ASCII value of character %c = %d\n  " , i , i ) ; } return 0 ; }
